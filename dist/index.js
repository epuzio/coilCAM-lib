(()=>{function t(t,e,n,i){return null==e?"multiplicative"==i&&"values"==t?Array(n).fill(1):Array(n).fill(0):Array.isArray(e)?e.length==n?e:null:Array(n).fill(e)}function e(e,n,i,r,s){if(n=t("offset",n,r,s),i=t("values",i,r,s),null==n)throw Error("Length of offset in "+e+" must be 0 or 1 or equal to nbPoints:"+r);if(null==i)throw Error("Length of values0 in "+e+" must be 0 or 1 or equal to nbPoints:"+r);return[n,i]}window.sinusoidal=function(t,n,i,r,s){let o=[];[n,r]=e("Sinusoidal",n,r,i,s);for(let e=0;e<i;e++)"additive"==s||null==s?o.push(t*Math.sin(2*Math.PI/period*e+n[e])+r[e]):"multiplicative"==s&&o.push(t*Math.pow(base,ampExp*e+n[e])*r[e]);return console.log("SINUSOIDAL VALUES:",o),o},window.linear=function(t,n,i,r,s){let o=[];[n,r]=e("Linear",n,r,i,s);for(let e=0;e<i;e++)"additive"==s?o.push(t*e+n[e]+r[e]):"multiplicative"==s&&o.push((t*e+n[e])*r[e]);return o},window.exponential=function(t,n,i,r,s,o,a){let l=[];[r,o]=e("Exponential",r,o,s,a);for(let e=0;e<s;e++)"additive"==a||null==a?l.push(t*Math.pow(n,i*e+r[e])+o[e]):"multiplicative"==a&&l.push(t*Math.pow(n,i*e+r[e])*o[e]);return l},window.square=function(t,n,i,r,s,o,a){let l=[];[i,o]=e("Square",i,o,s,a);for(let e=0;e<s;e++)"additive"==a||null==a?r&&r<=(e+i[e])%n?l.push(0*t+o[e]):l.push(1*t+o[e]):"multiplicative"==a&&(r&&r<=(e+i[e])%n?l.push(0*t*o[e]):l.push(1*t*o[e]));return l};let n={CCW:-1,CW:1,NOT_ORIENTABLE:0};var i=Object.freeze({__proto__:null,BOUNDARY:2,CCW:!0,CONTAINS:3,CW:!1,END_VERTEX:2,INSIDE:1,INTERLACE:4,NOT_VERTEX:0,ORIENTATION:n,OUTSIDE:0,OVERLAP_OPPOSITE:2,OVERLAP_SAME:1,PIx2:2*Math.PI,START_VERTEX:1});let r=1e-6;function s(t){r=t}function o(){return r}function a(t){return t<r&&t>-r}function l(t,e){return t-e<r&&t-e>-r}function h(t,e){return t-e>r}function c(t,e){return t-e<-r}let f={Utils:Object.freeze({__proto__:null,DECIMALS:3,EQ:l,EQ_0:a,GE:function(t,e){return t-e>-r},GT:h,LE:function(t,e){return t-e<r},LT:c,getTolerance:o,setTolerance:s}),Errors:void 0,Matrix:void 0,Planar_set:void 0,Point:void 0,Vector:void 0,Line:void 0,Circle:void 0,Segment:void 0,Arc:void 0,Box:void 0,Edge:void 0,Face:void 0,Ray:void 0,Ray_shooting:void 0,Multiline:void 0,Polygon:void 0,Distance:void 0,Inversion:void 0};for(let t in i)f[t]=i[t];Object.defineProperty(f,"DP_TOL",{get:function(){return o()},set:function(t){s(t)}});class u{static get ILLEGAL_PARAMETERS(){return ReferenceError("Illegal Parameters")}static get ZERO_DIVISION(){return Error("Zero division")}static get UNRESOLVED_BOUNDARY_CONFLICT(){return Error("Unresolved boundary conflict in boolean operation")}static get INFINITE_LOOP(){return Error("Infinite loop")}static get CANNOT_COMPLETE_BOOLEAN_OPERATION(){return Error("Cannot complete boolean operation")}static get CANNOT_INVOKE_ABSTRACT_METHOD(){return Error("Abstract method cannot be invoked")}static get OPERATION_IS_NOT_SUPPORTED(){return Error("Operation is not supported")}}f.Errors=u;class p{constructor(t,e){this.first=t,this.last=e||this.first}[Symbol.iterator](){let t;return{next:()=>({value:t=t?t.next:this.first,done:void 0===t})}}get size(){let t=0;for(let e of this)t++;return t}toArray(t,e){let n=[],i=t||this.first,r=e||this.last,s=i;if(void 0===s)return n;do n.push(s),s=s.next;while(s!==r.next)return n}append(t){return this.isEmpty()?this.first=t:(t.prev=this.last,this.last.next=t),this.last=t,this.last.next=void 0,this.first.prev=void 0,this}insert(t,e){if(this.isEmpty())this.first=t,this.last=t;else if(null==e)t.next=this.first,this.first.prev=t,this.first=t;else{let n=e.next;e.next=t,n&&(n.prev=t),t.prev=e,t.next=n,this.last===e&&(this.last=t)}return this.last.next=void 0,this.first.prev=void 0,this}remove(t){return t===this.first&&t===this.last?(this.first=void 0,this.last=void 0):(t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t===this.first&&(this.first=t.next),t===this.last&&(this.last=t.prev)),this}isEmpty(){return void 0===this.first}static testInfiniteLoop(t){let e=t,n=t;do{if(e!=t&&e===n)throw u.INFINITE_LOOP;e=e.next,n=n.next.next}while(e!=t)}}let d={stroke:"black"};class g{constructor(t=d){for(let e in t)this[e]=t[e];this.stroke=t.stroke??d.stroke}toAttributesString(){return Object.keys(this).reduce((t,e)=>t+(void 0!==this[e]?this.toAttrString(e,this[e]):""),"")}toAttrString(t,e){let n="className"===t?"class":this.convertCamelToKebabCase(t);return null===e?`${n} `:`${n}="${e.toString()}" `}convertCamelToKebabCase(t){return t.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g).join("-").toLowerCase()}}function m(t){return new g(t).toAttributesString()}class _ extends p{constructor(...t){if(super(),0===t.length)return;if(1===t.length&&t[0]instanceof Array){let e=t[0];if(0===e.length)return;for(let t of(e.every(t=>t instanceof f.Segment||t instanceof f.Arc||t instanceof f.Ray||t instanceof f.Line),e)){let e=new f.Edge(t);this.append(e)}this.setArcLength()}}get edges(){return[...this]}get box(){return this.edges.reduce((t,e)=>t.merge(e.box),new f.Box)}get vertices(){let t=this.edges.map(t=>t.start);return t.push(this.last.end),t}clone(){return new _(this.toShapes())}setArcLength(){for(let t of this)this.setOneEdgeArcLength(t)}setOneEdgeArcLength(t){t===this.first?t.arc_length=0:t.arc_length=t.prev.arc_length+t.prev.length}addVertex(t,e){let n=e.shape.split(t);if(null===n[0])return e.prev;if(null===n[1])return e;let i=new f.Edge(n[0]),r=e.prev;return this.insert(i,r),e.shape=n[1],i}getChain(t,e){let n=[];for(let i=t;i!==e.next;i=i.next)n.push(i);return n}split(t){for(let e of t){let t=this.findEdgeByPoint(e);this.addVertex(e,t)}return this}findEdgeByPoint(t){let e;for(let n of this)if(n.shape.contains(t)){e=n;break}return e}translate(t){return new _(this.edges.map(e=>e.shape.translate(t)))}rotate(t=0,e=new f.Point){return new _(this.edges.map(n=>n.shape.rotate(t,e)))}transform(t=new f.Matrix){return new _(this.edges.map(e=>e.shape.transform(t)))}toShapes(){return this.edges.map(t=>t.shape.clone())}toJSON(){return this.edges.map(t=>t.toJSON())}svgPoints(){return this.vertices.map(t=>`${t.x},${t.y}`).join(" ")}dpath(){let t=`M${this.first.start.x},${this.first.start.y}`;for(let e of this)t+=e.svg();return t}svg(t={}){let e=`
<path ${m({fill:"none",...t})} d="`;for(let t of(e+=`
M${this.first.start.x},${this.first.start.y}`,this))e+=t.svg();return e+`" >
</path>`}}function x(t,e,n){let i,r=n.length,s=t.shape.split(e);if(0===s.length)return;let o=0;o=null===s[0]?0:null===s[1]?t.shape.length:s[0].length;let a=0;l(o,0)&&(a|=1),l(o,t.shape.length)&&(a|=2),i=o===1/0?s[0].coord(e):2&a&&t.next&&0===t.next.arc_length?0:t.arc_length+o,n.push({id:r,pt:e,arc_length:i,edge_before:t,edge_after:void 0,face:t.face,is_vertex:a})}function v(t){t.int_points1_sorted=y(t.int_points1),t.int_points2_sorted=y(t.int_points2)}function y(t){let e=new Map,n=0;for(let i of t)!e.has(i.face)&&(e.set(i.face,n),n++);for(let n of t)n.faceId=e.get(n.face);return t.slice().sort(w)}function w(t,e){return t.faceId<e.faceId?-1:t.faceId>e.faceId?1:t.arc_length<e.arc_length?-1:t.arc_length>e.arc_length?1:0}function E(t){let e,n,i,r;if(t.int_points1.length<2)return;let s=!1;for(let o=0;o<t.int_points1_sorted.length;o++)if(-1!==t.int_points1_sorted[o].id){e=t.int_points1_sorted[o],n=t.int_points2[e.id];for(let a=o+1;a<t.int_points1_sorted.length&&l((i=t.int_points1_sorted[a]).arc_length,e.arc_length);a++)-1!==i.id&&-1!==(r=t.int_points2[i.id]).id&&i.edge_before===e.edge_before&&i.edge_after===e.edge_after&&r.edge_before===n.edge_before&&r.edge_after===n.edge_after&&(i.id=-1,r.id=-1,s=!0)}n=t.int_points2_sorted[0],e=t.int_points1[n.id];for(let i=1;i<t.int_points2_sorted.length;i++){let r=t.int_points2_sorted[i];if(-1===r.id)continue;if(-1===n.id||!l(r.arc_length,n.arc_length)){n=r,e=t.int_points1[n.id];continue}let o=t.int_points1[r.id];o.edge_before===e.edge_before&&o.edge_after===e.edge_after&&r.edge_before===n.edge_before&&r.edge_after===n.edge_after&&(o.id=-1,r.id=-1,s=!0)}s&&(t.int_points1=t.int_points1.filter(t=>t.id>=0),t.int_points2=t.int_points2.filter(t=>t.id>=0),t.int_points1.forEach((t,e)=>t.id=e),t.int_points2.forEach((t,e)=>t.id=e))}function I(t){for(let e of t)e.edge_before&&(e.edge_before.bvStart=void 0,e.edge_before.bvEnd=void 0,e.edge_before.bv=void 0,e.edge_before.overlap=void 0),e.edge_after&&(e.edge_after.bvStart=void 0,e.edge_after.bvEnd=void 0,e.edge_after.bv=void 0,e.edge_after.overlap=void 0);for(let e of t)e.edge_before&&(e.edge_before.bvEnd=2),e.edge_after&&(e.edge_after.bvStart=2)}function b(t,e){for(let n of t)n.edge_before&&n.edge_before.setInclusion(e),n.edge_after&&n.edge_after.setInclusion(e)}function T(t,e,n){let i,r;let s=1;if(1===t.length)return 1;i=t[e];for(let o=e+1;o<t.length&&i.face===n&&(r=t[o]).pt.equalTo(i.pt)&&r.edge_before===i.edge_before&&r.edge_after===i.edge_after;o++)s++;return s}function P(t,e){if(e){for(let n of e){let e=n.edge_before;if(n.is_vertex=0,e.shape.start&&e.shape.start.equalTo(n.pt)&&(n.is_vertex|=1),e.shape.end&&e.shape.end.equalTo(n.pt)&&(n.is_vertex|=2),1&n.is_vertex){n.edge_before=e.prev,e.prev&&(n.is_vertex=2);continue}if(2&n.is_vertex)continue;let i=t.addVertex(n.pt,e);n.edge_before=i}for(let n of e)n.edge_before?n.edge_after=n.edge_before.next:t instanceof _&&1&n.is_vertex&&(n.edge_after=t.first)}}function A(t,e,n){let i=t.edge_before,r=e.edge_after,s=n.length;i.next=n[0],n[0].prev=i,n[s-1].next=r,r.prev=n[s-1]}f.Multiline=_,f.multiline=(...t)=>new f.Multiline(...t);let{INSIDE:S,OUTSIDE:O,BOUNDARY:L,OVERLAP_SAME:N,OVERLAP_OPPOSITE:C}=i,{NOT_VERTEX:M,START_VERTEX:U,END_VERTEX:R}=i;function k(t,e){let[n,i]=F(t,e.clone().reverse(),3,!0);return n}function B(t,e){let[n,i]=F(t,e,2,!0);return n}function V(t,e){let[n,i]=F(t,e,2,!1),r=[];for(let t of n.faces)r=[...r,...[...t.edges].map(t=>t.shape)];let s=[];for(let t of i.faces)s=[...s,...[...t.edges].map(t=>t.shape)];return[r,s]}function D(t,e){let[n,i]=F(t,e,3,!1),r=[];for(let t of n.faces)r=[...r,...[...t.edges].map(t=>t.shape)];return r}function q(t,e){let n=t.clone(),i=e.clone(),r=$(n,i);return v(r),P(n,r.int_points1_sorted),P(i,r.int_points2_sorted),E(r),v(r),[r.int_points1_sorted.map(t=>t.pt),r.int_points2_sorted.map(t=>t.pt)]}function F(t,e,n,i){let r=t.clone(),s=e.clone(),o=$(r,s);return v(o),P(r,o.int_points1_sorted),P(s,o.int_points2_sorted),E(o),v(o),!function(t,e,n,i){let r=G(t,n.int_points1),s=G(e,n.int_points2);for(Q(r,e),Q(s,t),I(n.int_points1),I(n.int_points2),b(n.int_points1,e),b(n.int_points2,t);function(t,e,n,i,r,s){let o,a,l;let h=i.length,c=!1;for(let p=0;p<h;p++){let d,g=i[p];g.face!==o&&(a=p,o=g.face);let m=p,_=T(i,p,o);d=m+_<h&&i[m+_].face===o?m+_:a;let y=T(i,d,o);l=null;for(let t=d;t<d+y;t++){let e=i[t];if(e.face===o&&r[e.id].face===r[g.id].face){l=e;break}}if(null===l)continue;let w=g.edge_after,E=l.edge_before;if(w.bv===L&&E.bv!=L){w.bv=E.bv;continue}if(w.bv!=L&&E.bv===L){E.bv=w.bv;continue}if(w.bv===L&&E.bv===L&&w!=E||w.bv===S&&E.bv===O||w.bv===O&&E.bv===S){let t=w.next;for(;t!=E;)t.bvStart=void 0,t.bvEnd=void 0,t.bv=void 0,t.setInclusion(e),t=t.next}if(w.bv===L&&E.bv===L&&w!=E){let t,e=w.next;for(;e!=E;){if(e.bv!=L){if(void 0===t)t=e.bv;else if(e.bv!=t)throw u.UNRESOLVED_BOUNDARY_CONFLICT}e=e.next}void 0!=t&&(w.bv=t,E.bv=t);continue}if(w.bv===S&&E.bv===O||w.bv===O&&E.bv===S){let i=w;for(;i!=E;){if(i.bvStart===w.bv&&i.bvEnd===E.bv){let[o,a]=i.shape.distanceTo(e);if(o<10*f.DP_TOL){x(i,a.ps,n);let o=n[n.length-1];if(o.is_vertex&U)o.edge_after=i,o.edge_before=i.prev,i.bvStart=L,i.bv=void 0,i.setInclusion(e);else if(o.is_vertex&R)o.edge_after=i.next,i.bvEnd=L,i.bv=void 0,i.setInclusion(e);else{let t=e.addVertex(o.pt,i);o.edge_before=t,o.edge_after=t.next,t.setInclusion(e),t.next.bvStart=L,t.next.bvEnd=void 0,t.next.bv=void 0,t.next.setInclusion(e)}let l=e.findEdgeByPoint(a.pe);x(l,a.pe,r);let h=r[r.length-1];if(h.is_vertex&U)h.edge_after=l,h.edge_before=l.prev;else if(h.is_vertex&R)h.edge_after=l.next;else{let n=r.find(t=>t.edge_after===l),i=e.addVertex(h.pt,l);h.edge_before=i,h.edge_after=i.next,n&&(n.edge_after=i),i.bvStart=void 0,i.bvEnd=L,i.bv=void 0,i.setInclusion(t),i.next.bvStart=L,i.next.bvEnd=void 0,i.next.bv=void 0,i.next.setInclusion(t)}v(s),c=!0;break}}i=i.next}if(c)break;throw u.UNRESOLVED_BOUNDARY_CONFLICT}}return c}(t,e,n.int_points1,n.int_points1_sorted,n.int_points2,n););(function(t){let e,n,i;let r=t.int_points1.length;for(let s=0;s<r;s++){let o,a=t.int_points1_sorted[s];a.face!==e&&(n=s,e=a.face);let l=s,h=T(t.int_points1_sorted,s,e);o=l+h<r&&t.int_points1_sorted[l+h].face===e?l+h:n;let c=T(t.int_points1_sorted,o,e);i=null;for(let n=o;n<o+c;n++){let r=t.int_points1_sorted[n];if(r.face===e&&t.int_points2[r.id].face===t.int_points2[a.id].face){i=r;break}}if(null===i)continue;let f=a.edge_after,u=i.edge_before;if(!(2===f.bv&&2===u.bv)||f!==u)continue;let p=t.int_points2[a.id],d=t.int_points2[i.id],g=p.edge_after,m=d.edge_before;2===g.bv&&2===m.bv&&g===m||(p=t.int_points2[i.id],d=t.int_points2[a.id],g=p.edge_after,m=d.edge_before),2===g.bv&&2===m.bv&&g===m&&f.setOverlap(g)}})(n),Y(t,i,n.int_points1_sorted,!0),Y(e,i,n.int_points2_sorted,!1),j(t,r,i,!0),j(e,s,i,!1)}(r,s,o,n),i&&(function(t,e,n,i){for(let n of e.faces){for(let e of n)t.edges.add(e);void 0===i.find(t=>t.face===n)&&t.addFace(n.first,n.last)}}(r,s,0,o.int_points2),function(t,e,n){if(0!==n.int_points1.length)for(let t=0;t<n.int_points1.length;t++){let e=n.int_points1[t],i=n.int_points2[t];if(void 0!==e.edge_before&&void 0===e.edge_after&&void 0===i.edge_before&&void 0!==i.edge_after&&(e.edge_before.next=i.edge_after,i.edge_after.prev=e.edge_before,e.edge_after=i.edge_after,i.edge_before=e.edge_before),void 0!==i.edge_before&&void 0===i.edge_after&&void 0===e.edge_before&&void 0!==e.edge_after&&(i.edge_before.next=e.edge_after,e.edge_after.prev=i.edge_before,i.edge_after=e.edge_after,e.edge_before=i.edge_before),void 0!==e.edge_before&&void 0===e.edge_after)for(let t of n.int_points1_sorted)t!==e&&void 0===t.edge_before&&void 0!==t.edge_after&&t.pt.equalTo(e.pt)&&(e.edge_before.next=t.edge_after,t.edge_after.prev=e.edge_before,e.edge_after=t.edge_after,t.edge_before=e.edge_before);if(void 0!==i.edge_before&&void 0===i.edge_after)for(let t of n.int_points2_sorted)t!==i&&void 0===t.edge_before&&void 0!==t.edge_after&&t.pt.equalTo(i.pt)&&(i.edge_before.next=t.edge_after,t.edge_after.prev=i.edge_before,i.edge_after=t.edge_after,t.edge_before=i.edge_before)}}(0,0,o),W(r,o.int_points1),W(s,o.int_points2),z(r,o.int_points1,o.int_points2),z(r,o.int_points2,o.int_points1)),[r,s]}function $(t,e){let n={int_points1:[],int_points2:[]};for(let i of t.edges)for(let t of e.edges.search(i.box))for(let e of i.shape.intersect(t.shape))x(i,e,n.int_points1),x(t,e,n.int_points2);return n}function G(t,e){let n=[];for(let i of t.faces)e.find(t=>t.face===i)||n.push(i);return n}function Q(t,e){for(let n of t)n.first.bv=n.first.bvStart=n.first.bvEnd=void 0,n.first.setInclusion(e)}function Y(t,e,n,i){let r,s,o,a;if(n)for(let l=0;l<n.length;l++){let h;if((r=n[l]).face!==o&&(a=l,o=r.face),o.isEmpty())continue;let c=l,f=T(n,l,o);h=c+f<n.length&&n[c+f].face===r.face?c+f:a,s=n[h];let u=T(n,h,o),p=r.edge_after,d=s.edge_before;if(p.bv===S&&d.bv===S&&1===e||p.bv===O&&d.bv===O&&2===e||(p.bv===O||d.bv===O)&&3===e&&!i||(p.bv===S||d.bv===S)&&3===e&&i||p.bv===L&&d.bv===L&&p.overlap&N&&i||p.bv===L&&d.bv===L&&p.overlap&C){t.removeChain(o,p,d);for(let t=c;t<c+f;t++)n[t].edge_after=void 0;for(let t=h;t<h+u;t++)n[t].edge_before=void 0}l+=f-1}}function W(t,e){for(let n of e)t.faces.delete(n.face),n.face=void 0,n.edge_before&&(n.edge_before.face=void 0),n.edge_after&&(n.edge_after.face=void 0)}function z(t,e,n){for(let i of e){if(void 0===i.edge_before||void 0===i.edge_after||i.face||i.edge_after.face||i.edge_before.face)continue;let r=i.edge_after,s=i.edge_before;try{p.testInfiniteLoop(r)}catch(t){throw u.CANNOT_COMPLETE_BOOLEAN_OPERATION}let o=t.addFace(r,s);for(let t of e)t.edge_before&&t.edge_after&&t.edge_before.face===o&&t.edge_after.face===o&&(t.face=o);for(let t of n)t.edge_before&&t.edge_after&&t.edge_before.face===o&&t.edge_after.face===o&&(t.face=o)}}function j(t,e,n,i){for(let r of e){let e=r.first.bv;(1===n&&e===S||3===n&&e===S&&i||3===n&&e===O&&!i||2===n&&e===O)&&t.deleteFace(r)}}var Z=Object.freeze({__proto__:null,BOOLEAN_INTERSECT:2,BOOLEAN_SUBTRACT:3,BOOLEAN_UNION:1,calculateIntersections:q,innerClip:V,intersect:B,outerClip:D,removeNotRelevantChains:Y,removeOldFaces:W,restoreFaces:z,subtract:k,unify:function(t,e){let[n,i]=F(t,e,1,!0);return n}});let H=RegExp("T.F..FFF.|T.F...F.."),J=RegExp("T........|.T.......|...T.....|....T...."),K=RegExp("FT.......|F..T.....|F...T...."),X=RegExp("T.F..F..."),tt=RegExp("T.F..F...|.TF..F...|..FT.F...|..F.TF...");class te{constructor(){this.m=Array(9).fill(void 0)}get I2I(){return this.m[0]}set I2I(t){this.m[0]=t}get I2B(){return this.m[1]}set I2B(t){this.m[1]=t}get I2E(){return this.m[2]}set I2E(t){this.m[2]=t}get B2I(){return this.m[3]}set B2I(t){this.m[3]=t}get B2B(){return this.m[4]}set B2B(t){this.m[4]=t}get B2E(){return this.m[5]}set B2E(t){this.m[5]=t}get E2I(){return this.m[6]}set E2I(t){this.m[6]=t}get E2B(){return this.m[7]}set E2B(t){this.m[7]=t}get E2E(){return this.m[8]}set E2E(t){this.m[8]=t}toString(){return this.m.map(t=>t instanceof Array&&t.length>0?"T":t instanceof Array&&0===t.length?"F":"*").join("")}equal(){return H.test(this.toString())}intersect(){return J.test(this.toString())}touch(){return K.test(this.toString())}inside(){return X.test(this.toString())}covered(){return tt.test(this.toString())}}function tn(t,e){let n=[],[i,r,s]=t.standard,[o,a,l]=e.standard,h=i*a-r*o,c=s*a-r*l,u=i*l-s*o;if(!f.Utils.EQ_0(h)){let t,e;0===r?(t=s/i,e=u/h):0===a?(t=l/o,e=u/h):0===i?(t=c/h,e=s/r):0===o?(t=c/h,e=l/a):(t=c/h,e=u/h),n.push(new f.Point(t,e))}return n}function ti(t,e){let n=[],i=e.pc.projectionOn(t),r=e.pc.distanceTo(i)[0];if(f.Utils.EQ(r,e.r))n.push(i);else if(f.Utils.LT(r,e.r)){let s,o,a=Math.sqrt(e.r*e.r-r*r);s=t.norm.rotate90CCW().multiply(a),o=i.translate(s),n.push(o),s=t.norm.rotate90CW().multiply(a),o=i.translate(s),n.push(o)}return n}function tr(t,e){let n=[];for(let i of e.toSegments())for(let e of to(i,t))tE(e,n)||n.push(e);return n}function ts(t,e){let n=[];if(0===tr(t,e.box).length)return n;for(let i of ti(t,new f.Circle(e.pc,e.r)))i.on(e)&&n.push(i);return n}function to(t,e){let n=[];return(t.ps.on(e)&&n.push(t.ps),t.pe.on(e)&&!t.isZeroLength()&&n.push(t.pe),n.length>0||t.isZeroLength()||t.ps.leftTo(e)&&t.pe.leftTo(e)||!t.ps.leftTo(e)&&!t.pe.leftTo(e))?n:tn(new f.Line(t.ps,t.pe),e)}function ta(t,e){let n=[];if(t.box.not_intersect(e.box))return n;if(t.isZeroLength())return t.ps.on(e)&&n.push(t.ps),n;if(e.isZeroLength())return e.ps.on(t)&&n.push(e.ps),n;let i=new f.Line(t.ps,t.pe),r=new f.Line(e.ps,e.pe);if(i.incidentTo(r))t.ps.on(e)&&n.push(t.ps),t.pe.on(e)&&n.push(t.pe),!e.ps.on(t)||e.ps.equalTo(t.ps)||e.ps.equalTo(t.pe)||n.push(e.ps),!e.pe.on(t)||e.pe.equalTo(t.ps)||e.pe.equalTo(t.pe)||n.push(e.pe);else{let s=tn(i,r);s.length>0&&tl(s[0],t)&&tl(s[0],e)&&n.push(s[0])}return n}function tl(t,e){let n=e.box;return f.Utils.LE(t.x,n.xmax)&&f.Utils.GE(t.x,n.xmin)&&f.Utils.LE(t.y,n.ymax)&&f.Utils.GE(t.y,n.ymin)}function th(t,e){let n=[];if(t.box.not_intersect(e.box))return n;if(t.isZeroLength()){let[i,r]=t.ps.distanceTo(e.pc);return f.Utils.EQ(i,e.r)&&n.push(t.ps),n}for(let i of ti(new f.Line(t.ps,t.pe),e))i.on(t)&&n.push(i);return n}function tc(t,e){let n=[];if(t.box.not_intersect(e.box))return n;if(t.isZeroLength())return t.ps.on(e)&&n.push(t.ps),n;for(let i of ti(new f.Line(t.ps,t.pe),new f.Circle(e.pc,e.r)))i.on(t)&&i.on(e)&&n.push(i);return n}function tf(t,e){let n,i=[];if(t.box.not_intersect(e.box))return i;let r=new f.Vector(t.pc,e.pc),s=t.r,o=e.r;if(f.Utils.EQ_0(s)||f.Utils.EQ_0(o))return i;if(f.Utils.EQ_0(r.x)&&f.Utils.EQ_0(r.y)&&f.Utils.EQ(s,o))return i.push(t.pc.translate(-s,0)),i;let a=t.pc.distanceTo(e.pc)[0];if(f.Utils.GT(a,s+o)||f.Utils.LT(a,Math.abs(s-o)))return i;if(r.x/=a,r.y/=a,f.Utils.EQ(a,s+o)||f.Utils.EQ(a,Math.abs(s-o)))return i.push(t.pc.translate(s*r.x,s*r.y)),i;let l=s*s/(2*a)-o*o/(2*a)+a/2,h=t.pc.translate(l*r.x,l*r.y),c=Math.sqrt(s*s-l*l);return i.push(h.translate(r.rotate90CCW().multiply(c))),i.push(h.translate(r.rotate90CW().multiply(c))),i}function tu(t,e){let n=[];if(t.box.not_intersect(e.box))return n;if(t.pc.equalTo(e.pc)&&f.Utils.EQ(t.r,e.r)){let i;return(i=t.start).on(e)&&n.push(i),(i=t.end).on(e)&&n.push(i),(i=e.start).on(t)&&n.push(i),(i=e.end).on(t)&&n.push(i),n}let i=new f.Circle(t.pc,t.r),r=new f.Circle(e.pc,e.r);for(let s of i.intersect(r))s.on(t)&&s.on(e)&&n.push(s);return n}function tp(t,e){let n=[];if(t.box.not_intersect(e.box))return n;if(e.pc.equalTo(t.pc)&&f.Utils.EQ(e.r,t.r))return n.push(t.start),n.push(t.end),n;for(let i of tf(e,new f.Circle(t.pc,t.r)))i.on(t)&&n.push(i);return n}function td(t,e){return t.isSegment?ta(t.shape,e):tc(e,t.shape)}function tg(t,e){return t.isSegment?tc(t.shape,e):tu(t.shape,e)}function tm(t,e){return t.isSegment?to(t.shape,e):ts(e,t.shape)}function t_(t,e){let n=[];for(let i of e.edges)for(let e of td(i,t))n.push(e);return n}function tx(t,e){let n=[];for(let i of e.edges)for(let e of tg(i,t))n.push(e);return n}function tv(t,e){let n=[];if(e.isEmpty())return n;for(let i of e.edges)for(let e of tm(i,t))tE(e,n)||n.push(e);return t.sortPoints(n)}function ty(t,e){let n=[];if(e.isEmpty())return n;for(let i of e.edges)for(let e of i.isSegment?th(i.shape,t):tp(i.shape,t))n.push(e);return n}function tw(t,e){if(t.isSegment)return td(e,t.shape);if(t.isArc)return tg(e,t.shape);if(t.isLine)return tm(e,t.shape);if(t.isRay){var n;return n=t.shape,e.isSegment?tb(n,e.shape):tT(n,e.shape)}return[]}function tE(t,e){return e.some(e=>e.equalTo(t))}function tI(t){return new f.Line(t.start,t.norm)}function tb(t,e){return to(e,tI(t)).filter(e=>t.contains(e))}function tT(t,e){return ts(tI(t),e).filter(e=>t.contains(e))}function tP(t,e){return ti(tI(t),e).filter(e=>t.contains(e))}function tA(t,e){return tn(tI(t),e).filter(e=>t.contains(e))}function tS(t,e){return tv(tI(t),e).filter(e=>t.contains(e))}function tO(t,e){let n=new f.Ray(e),i=new f.Line(n.pt,n.norm),r=new f.Box(n.box.xmin-f.DP_TOL,n.box.ymin-f.DP_TOL,n.box.xmax,n.box.ymax+f.DP_TOL);if(t.box.not_intersect(r))return f.OUTSIDE;let s=t.edges.search(r);if(0===s.length)return f.OUTSIDE;for(let t of s)if(t.shape.contains(e))return f.BOUNDARY;let o=[...t.faces],u=[];for(let t of s)for(let i of n.intersect(t.shape)){if(i.equalTo(e))return f.BOUNDARY;u.push({pt:i,edge:t,face_index:o.indexOf(t.face)})}u.sort((t,e)=>c(t.pt.x,e.pt.x)?-1:h(t.pt.x,e.pt.x)?1:t.face_index<e.face_index?-1:t.face_index>e.face_index?1:t.edge.arc_length<e.edge.arc_length?-1:t.edge.arc_length>e.edge.arc_length?1:0);let p=0;for(let t=0;t<u.length;t++){let e=u[t];if(e.pt.equalTo(e.edge.shape.start)){if(t>0&&e.pt.equalTo(u[t-1].pt)&&e.face_index===u[t-1].face_index&&e.edge.prev===u[t-1].edge)continue;let n=e.edge.prev;for(;a(n.length);)n=n.prev;let r=n.shape.tangentInEnd(),s=e.pt.translate(r),o=e.edge.shape.tangentInStart(),l=e.pt.translate(o),h=s.leftTo(i),c=l.leftTo(i);(h&&!c||!h&&c)&&p++}else if(e.pt.equalTo(e.edge.shape.end)){if(t>0&&e.pt.equalTo(u[t-1].pt)&&e.face_index===u[t-1].face_index&&e.edge.next===u[t-1].edge)continue;let n=e.edge.next;for(;a(n.length);)n=n.next;let r=n.shape.tangentInStart(),s=e.pt.translate(r),o=e.edge.shape.tangentInEnd(),l=e.pt.translate(o),h=s.leftTo(i),c=l.leftTo(i);(h&&!c||!h&&c)&&p++}else if(e.edge.shape instanceof f.Segment)p++;else{let t=e.edge.shape.box;!(l(e.pt.y,t.ymin)||l(e.pt.y,t.ymax))&&p++}}return p%2==1?1:0}function tL(t,e){return tU(t,e).intersect()}function tN(t,e){return tU(t,e).inside()}function tC(t,e){return tU(t,e).covered()}function tM(t,e){return tC(e,t)}function tU(t,e){if(t instanceof f.Line&&e instanceof f.Line){let n,i;return n=new te,0===(i=tn(t,e)).length?t.contains(e.pt)&&e.contains(t.pt)?(n.I2I=[t],n.I2E=[],n.E2I=[]):(n.I2I=[],n.I2E=[t],n.E2I=[e]):(n.I2I=i,n.I2E=t.split(i),n.E2I=e.split(i)),n}if(t instanceof f.Line&&e instanceof f.Circle)return function(t,e){let n=new te,i=ti(t,e);if(0===i.length)n.I2I=[],n.I2B=[],n.I2E=[t],n.E2I=[e];else if(1===i.length)n.I2I=[],n.I2B=i,n.I2E=t.split(i),n.E2I=[e];else{let r=new _([t]),s=t.sortPoints(i);r.split(s);let o=r.toShapes();n.I2I=[o[1]],n.I2B=s,n.I2E=[o[0],o[2]],n.E2I=new f.Polygon([e.toArc()]).cutWithLine(t)}return n}(t,e);if(t instanceof f.Line&&e instanceof f.Box)return function(t,e){let n=new te,i=tr(t,e);if(0===i.length)n.I2I=[],n.I2B=[],n.I2E=[t],n.E2I=[e];else if(1===i.length)n.I2I=[],n.I2B=i,n.I2E=t.split(i),n.E2I=[e];else{let r=new _([t]),s=t.sortPoints(i);r.split(s);let o=r.toShapes();e.toSegments().some(t=>t.contains(i[0])&&t.contains(i[1]))?(n.I2I=[],n.I2B=[o[1]],n.I2E=[o[0],o[2]],n.E2I=[e]):(n.I2I=[o[1]],n.I2B=s,n.I2E=[o[0],o[2]],n.E2I=new f.Polygon(e.toSegments()).cutWithLine(t))}return n}(t,e);if(t instanceof f.Line&&e instanceof f.Polygon){let n,i,r,s;return n=new te,i=tv(t,e),r=new _([t]),s=i.length>0?i.slice():t.sortPoints(i),r.split(s),[...r].forEach(t=>t.setInclusion(e)),n.I2I=[...r].filter(t=>t.bv===f.INSIDE).map(t=>t.shape),n.I2B=[...r].slice(1).map(t=>t.bv===f.BOUNDARY?t.shape:t.shape.start),n.I2E=[...r].filter(t=>t.bv===f.OUTSIDE).map(t=>t.shape),n.E2I=e.cutWithLine(t),n}if((t instanceof f.Segment||t instanceof f.Arc)&&e instanceof f.Polygon)return tR(t,e);if((t instanceof f.Segment||t instanceof f.Arc)&&(e instanceof f.Circle||e instanceof f.Box))return tR(t,new f.Polygon(e));if(t instanceof f.Polygon&&e instanceof f.Polygon)return tk(t,e);else if((t instanceof f.Circle||t instanceof f.Box)&&(e instanceof f.Circle||e instanceof f.Box))return tk(new f.Polygon(t),new f.Polygon(e));else if((t instanceof f.Circle||t instanceof f.Box)&&e instanceof f.Polygon)return tk(new f.Polygon(t),e);else if(t instanceof f.Polygon&&(e instanceof f.Circle||e instanceof f.Box))return tk(t,new f.Polygon(e))}function tR(t,e){let n=new te,i=t instanceof f.Line?tv(t,e):t instanceof f.Segment?t_(t,e):t instanceof f.Arc?tx(t,e):[],r=i.length>0?i.slice():t.sortPoints(i),s=new _([t]);for(let i of(s.split(r),[...s].forEach(t=>t.setInclusion(e)),n.I2I=[...s].filter(t=>t.bv===f.INSIDE).map(t=>t.shape),n.I2B=[...s].slice(1).map(t=>t.bv===f.BOUNDARY?t.shape:t.shape.start),n.I2E=[...s].filter(t=>t.bv===f.OUTSIDE).map(t=>t.shape),n.B2I=[],n.B2B=[],n.B2E=[],[t.start,t.end]))switch(tO(e,i)){case f.INSIDE:n.B2I.push(i);break;case f.BOUNDARY:n.B2B.push(i);break;case f.OUTSIDE:n.B2E.push(i)}return n}function tk(t,e){let n=new te,[i,r]=q(t,e),s=B(t,e),o=k(t,e),a=k(e,t),[l,h]=V(t,e),c=D(t,e),f=D(e,t);return n.I2I=s.isEmpty()?[]:[s],n.I2B=h,n.I2E=o.isEmpty()?[]:[o],n.B2I=l,n.B2B=i,n.B2E=c,n.E2I=a.isEmpty()?[]:[a],n.E2B=f,n}var tB=Object.freeze({__proto__:null,contain:function(t,e){return tN(e,t)},cover:tM,covered:tC,disjoint:function(t,e){return!tL(t,e)},equal:function(t,e){return tU(t,e).equal()},inside:tN,intersect:tL,relate:tU,touch:function(t,e){return tU(t,e).touch()}});class tV{constructor(t=1,e=0,n=0,i=1,r=0,s=0){this.a=t,this.b=e,this.c=n,this.d=i,this.tx=r,this.ty=s}clone(){return new tV(this.a,this.b,this.c,this.d,this.tx,this.ty)}transform(t){return[t[0]*this.a+t[1]*this.c+this.tx,t[0]*this.b+t[1]*this.d+this.ty]}multiply(t){return new tV(this.a*t.a+this.c*t.b,this.b*t.a+this.d*t.b,this.a*t.c+this.c*t.d,this.b*t.c+this.d*t.d,this.a*t.tx+this.c*t.ty+this.tx,this.b*t.tx+this.d*t.ty+this.ty)}translate(...t){let e,n;if(1!=t.length||isNaN(t[0].x)||isNaN(t[0].y)){if(2===t.length&&"number"==typeof t[0]&&"number"==typeof t[1])e=t[0],n=t[1];else throw u.ILLEGAL_PARAMETERS}else e=t[0].x,n=t[0].y;return this.multiply(new tV(1,0,0,1,e,n))}rotate(t,e=0,n=0){let i=Math.cos(t),r=Math.sin(t);return this.translate(e,n).multiply(new tV(i,r,-r,i,0,0)).translate(-e,-n)}scale(t,e){return this.multiply(new tV(t,0,0,e,0,0))}equalTo(t){return!!(f.Utils.EQ(this.tx,t.tx)&&f.Utils.EQ(this.ty,t.ty)&&f.Utils.EQ(this.a,t.a)&&f.Utils.EQ(this.b,t.b)&&f.Utils.EQ(this.c,t.c)&&f.Utils.EQ(this.d,t.d))}}f.Matrix=tV,f.matrix=(...t)=>new f.Matrix(...t);let tD=class t{constructor(t,e){this.low=t,this.high=e}clone(){return new t(this.low,this.high)}get max(){return this.clone()}less_than(t){return this.low<t.low||this.low==t.low&&this.high<t.high}equal_to(t){return this.low==t.low&&this.high==t.high}intersect(t){return!this.not_intersect(t)}not_intersect(t){return this.high<t.low||t.high<this.low}merge(e){return new t(void 0===this.low?e.low:Math.min(this.low,e.low),void 0===this.high?e.high:Math.max(this.high,e.high))}output(){return[this.low,this.high]}static comparable_max(t,e){return t.merge(e)}static comparable_less_than(t,e){return t<e}};class tq{constructor(t,e,n=null,i=null,r=null,s=1){this.left=n,this.right=i,this.parent=r,this.color=s,this.item={key:t,value:e},t&&t instanceof Array&&2==t.length&&!Number.isNaN(t[0])&&!Number.isNaN(t[1])&&(this.item.key=new tD(Math.min(t[0],t[1]),Math.max(t[0],t[1]))),this.max=this.item.key?this.item.key.max:void 0}isNil(){return void 0===this.item.key&&void 0===this.item.value&&null===this.left&&null===this.right&&1===this.color}_value_less_than(t){return this.item.value&&t.item.value&&this.item.value.less_than?this.item.value.less_than(t.item.value):this.item.value<t.item.value}less_than(t){return this.item.value===this.item.key&&t.item.value===t.item.key?this.item.key.less_than(t.item.key):this.item.key.less_than(t.item.key)||this.item.key.equal_to(t.item.key)&&this._value_less_than(t)}_value_equal(t){return this.item.value&&t.item.value&&this.item.value.equal_to?this.item.value.equal_to(t.item.value):this.item.value==t.item.value}equal_to(t){return this.item.value===this.item.key&&t.item.value===t.item.key?this.item.key.equal_to(t.item.key):this.item.key.equal_to(t.item.key)&&this._value_equal(t)}intersect(t){return this.item.key.intersect(t.item.key)}copy_data(t){this.item.key=t.item.key,this.item.value=t.item.value}update_max(){if(this.max=this.item.key?this.item.key.max:void 0,this.right&&this.right.max){let t=this.item.key.constructor.comparable_max;this.max=t(this.max,this.right.max)}if(this.left&&this.left.max){let t=this.item.key.constructor.comparable_max;this.max=t(this.max,this.left.max)}}not_intersect_left_subtree(t){return(0,this.item.key.constructor.comparable_less_than)(void 0!==this.left.max.high?this.left.max.high:this.left.max,t.item.key.low)}not_intersect_right_subtree(t){let e=this.item.key.constructor.comparable_less_than,n=void 0!==this.right.max.low?this.right.max.low:this.right.item.key.low;return e(t.item.key.high,n)}}class tF{constructor(){this.root=null,this.nil_node=new tq}get size(){let t=0;return this.tree_walk(this.root,()=>t++),t}get keys(){let t=[];return this.tree_walk(this.root,e=>t.push(e.item.key.output?e.item.key.output():e.item.key)),t}get values(){let t=[];return this.tree_walk(this.root,e=>t.push(e.item.value)),t}get items(){let t=[];return this.tree_walk(this.root,e=>t.push({key:e.item.key.output?e.item.key.output():e.item.key,value:e.item.value})),t}isEmpty(){return null==this.root||this.root==this.nil_node}clear(){this.root=null}insert(t,e=t){if(void 0===t)return;let n=new tq(t,e,this.nil_node,this.nil_node,null,0);return this.tree_insert(n),this.recalc_max(n),n}exist(t,e=t){let n=new tq(t,e);return!!this.tree_search(this.root,n)}remove(t,e=t){let n=new tq(t,e),i=this.tree_search(this.root,n);return i&&this.tree_delete(i),i}search(t,e=(t,e)=>t===e?e.output():t){let n=new tq(t),i=[];return this.tree_search_interval(this.root,n,i),i.map(t=>e(t.item.value,t.item.key))}intersect_any(t){let e=new tq(t);return this.tree_find_any_interval(this.root,e)}forEach(t){this.tree_walk(this.root,e=>t(e.item.key,e.item.value))}map(t){let e=new tF;return this.tree_walk(this.root,n=>e.insert(n.item.key,t(n.item.value,n.item.key))),e}recalc_max(t){let e=t;for(;null!=e.parent;)e.parent.update_max(),e=e.parent}tree_insert(t){let e=this.root,n=null;if(null==this.root||this.root==this.nil_node)this.root=t;else{for(;e!=this.nil_node;)n=e,e=t.less_than(e)?e.left:e.right;t.parent=n,t.less_than(n)?n.left=t:n.right=t}this.insert_fixup(t)}insert_fixup(t){let e,n;for(e=t;e!=this.root&&0==e.parent.color;)e.parent==e.parent.parent.left?0==(n=e.parent.parent.right).color?(e.parent.color=1,n.color=1,e.parent.parent.color=0,e=e.parent.parent):(e==e.parent.right&&(e=e.parent,this.rotate_left(e)),e.parent.color=1,e.parent.parent.color=0,this.rotate_right(e.parent.parent)):0==(n=e.parent.parent.left).color?(e.parent.color=1,n.color=1,e.parent.parent.color=0,e=e.parent.parent):(e==e.parent.left&&(e=e.parent,this.rotate_right(e)),e.parent.color=1,e.parent.parent.color=0,this.rotate_left(e.parent.parent));this.root.color=1}tree_delete(t){let e,n;(n=(e=t.left==this.nil_node||t.right==this.nil_node?t:this.tree_successor(t)).left!=this.nil_node?e.left:e.right).parent=e.parent,e==this.root?this.root=n:(e==e.parent.left?e.parent.left=n:e.parent.right=n,e.parent.update_max()),this.recalc_max(n),e!=t&&(t.copy_data(e),t.update_max(),this.recalc_max(t)),1==e.color&&this.delete_fixup(n)}delete_fixup(t){let e,n=t;for(;n!=this.root&&null!=n.parent&&1==n.color;)n==n.parent.left?(0==(e=n.parent.right).color&&(e.color=1,n.parent.color=0,this.rotate_left(n.parent),e=n.parent.right),1==e.left.color&&1==e.right.color?(e.color=0,n=n.parent):(1==e.right.color&&(e.color=0,e.left.color=1,this.rotate_right(e),e=n.parent.right),e.color=n.parent.color,n.parent.color=1,e.right.color=1,this.rotate_left(n.parent),n=this.root)):(0==(e=n.parent.left).color&&(e.color=1,n.parent.color=0,this.rotate_right(n.parent),e=n.parent.left),1==e.left.color&&1==e.right.color?(e.color=0,n=n.parent):(1==e.left.color&&(e.color=0,e.right.color=1,this.rotate_left(e),e=n.parent.left),e.color=n.parent.color,n.parent.color=1,e.left.color=1,this.rotate_right(n.parent),n=this.root));n.color=1}tree_search(t,e){if(null!=t&&t!=this.nil_node)return e.equal_to(t)?t:e.less_than(t)?this.tree_search(t.left,e):this.tree_search(t.right,e)}tree_search_interval(t,e,n){null==t||t==this.nil_node||(t.left==this.nil_node||t.not_intersect_left_subtree(e)||this.tree_search_interval(t.left,e,n),t.intersect(e)&&n.push(t),t.right==this.nil_node||t.not_intersect_right_subtree(e)||this.tree_search_interval(t.right,e,n))}tree_find_any_interval(t,e){let n=!1;return null==t||t==this.nil_node||(t.left==this.nil_node||t.not_intersect_left_subtree(e)||(n=this.tree_find_any_interval(t.left,e)),n||(n=t.intersect(e)),n||t.right==this.nil_node||t.not_intersect_right_subtree(e)||(n=this.tree_find_any_interval(t.right,e))),n}local_minimum(t){let e=t;for(;null!=e.left&&e.left!=this.nil_node;)e=e.left;return e}local_maximum(t){let e=t;for(;null!=e.right&&e.right!=this.nil_node;)e=e.right;return e}tree_successor(t){let e,n,i;if(t.right!=this.nil_node)e=this.local_minimum(t.right);else{for(n=t,i=t.parent;null!=i&&i.right==n;)n=i,i=i.parent;e=i}return e}rotate_left(t){let e=t.right;t.right=e.left,e.left!=this.nil_node&&(e.left.parent=t),e.parent=t.parent,t==this.root?this.root=e:t==t.parent.left?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e,null!=t&&t!=this.nil_node&&t.update_max(),null!=(e=t.parent)&&e!=this.nil_node&&e.update_max()}rotate_right(t){let e=t.left;t.left=e.right,e.right!=this.nil_node&&(e.right.parent=t),e.parent=t.parent,t==this.root?this.root=e:t==t.parent.left?t.parent.left=e:t.parent.right=e,e.right=t,t.parent=e,null!=t&&t!=this.nil_node&&t.update_max(),null!=(e=t.parent)&&e!=this.nil_node&&e.update_max()}tree_walk(t,e){null!=t&&t!=this.nil_node&&(this.tree_walk(t.left,e),e(t),this.tree_walk(t.right,e))}testRedBlackProperty(){let t=!0;return this.tree_walk(this.root,function(e){0!=e.color||1==e.left.color&&1==e.right.color||(t=!1)}),t}testBlackHeightProperty(t){let e=0,n=0;if(1==t.color&&e++,(n=t.left!=this.nil_node?this.testBlackHeightProperty(t.left):1)!=(t.right!=this.nil_node?this.testBlackHeightProperty(t.right):1))throw Error("Red-black height property violated");return e+n}}class t$ extends Set{constructor(t){super(t),this.index=new tF,this.forEach(t=>this.index.insert(t))}add(t){let e=this.size,{key:n,value:i}=t,r=n||t.box,s=i||t;return super.add(s),this.size>e&&this.index.insert(r,s),this}delete(t){let{key:e,value:n}=t,i=e||t.box,r=n||t,s=super.delete(r);return s&&this.index.remove(i,r),s}clear(){super.clear(),this.index=new tF}search(t){return this.index.search(t)}hit(t){let e=new f.Box(t.x-1,t.y-1,t.x+1,t.y+1);return this.index.search(e).filter(e=>t.on(e))}svg(){return[...this].reduce((t,e)=>t+e.svg(),"")}}f.PlanarSet=t$;class tG{get name(){throw u.CANNOT_INVOKE_ABSTRACT_METHOD}get box(){throw u.CANNOT_INVOKE_ABSTRACT_METHOD}clone(){throw u.CANNOT_INVOKE_ABSTRACT_METHOD}translate(...t){return this.transform(new tV().translate(...t))}rotate(t,e=new f.Point){return this.transform(new tV().rotate(t,e.x,e.y))}scale(t,e){return this.transform(new tV().scale(t,e))}transform(...t){throw u.CANNOT_INVOKE_ABSTRACT_METHOD}toJSON(){return Object.assign({},this,{name:this.name})}svg(t={}){throw u.CANNOT_INVOKE_ABSTRACT_METHOD}}let tQ=class t extends tG{constructor(...t){if(super(),this.x=0,this.y=0,0===t.length)return;if(1===t.length&&t[0]instanceof Array&&2===t[0].length){let e=t[0];if("number"==typeof e[0]&&"number"==typeof e[1]){this.x=e[0],this.y=e[1];return}}if(1===t.length&&t[0]instanceof Object&&"point"===t[0].name){let{x:e,y:n}=t[0];this.x=e,this.y=n;return}if(2===t.length&&"number"==typeof t[0]&&"number"==typeof t[1]){this.x=t[0],this.y=t[1];return}throw u.ILLEGAL_PARAMETERS}get box(){return new f.Box(this.x,this.y,this.x,this.y)}clone(){return new f.Point(this.x,this.y)}get vertices(){return[this.clone()]}equalTo(t){return f.Utils.EQ(this.x,t.x)&&f.Utils.EQ(this.y,t.y)}lessThan(t){return!!(f.Utils.LT(this.y,t.y)||f.Utils.EQ(this.y,t.y)&&f.Utils.LT(this.x,t.x))}transform(t){return new f.Point(t.transform([this.x,this.y]))}projectionOn(t){if(this.equalTo(t.pt))return this.clone();let e=new f.Vector(this,t.pt);if(f.Utils.EQ_0(e.cross(t.norm)))return t.pt.clone();let n=e.dot(t.norm),i=t.norm.multiply(n);return this.translate(i)}leftTo(t){let e=new f.Vector(t.pt,this);return f.Utils.GT(e.dot(t.norm),0)}distanceTo(e){if(e instanceof t){let t=e.x-this.x,n=e.y-this.y;return[Math.sqrt(t*t+n*n),new f.Segment(this,e)]}return e instanceof f.Line?f.Distance.point2line(this,e):e instanceof f.Circle?f.Distance.point2circle(this,e):e instanceof f.Segment?f.Distance.point2segment(this,e):e instanceof f.Arc?f.Distance.point2arc(this,e):e instanceof f.Polygon?f.Distance.point2polygon(this,e):e instanceof f.PlanarSet?f.Distance.shape2planarSet(this,e):void 0}on(t){return t instanceof f.Point?this.equalTo(t):t instanceof f.Box||t instanceof f.Line||t instanceof f.Ray||t instanceof f.Circle||t instanceof f.Segment||t instanceof f.Arc||t instanceof f.Polygon?t.contains(this):void 0}get name(){return"point"}svg(t={}){let e=t.r??3;return`
<circle cx="${this.x}" cy="${this.y}" r="${e}"
            ${m({fill:"red",...t})} />`}};f.Point=tQ,f.point=(...t)=>new f.Point(...t);let tY=class extends tG{constructor(...t){if(super(),this.x=0,this.y=0,0===t.length)return;if(1===t.length&&t[0]instanceof Array&&2===t[0].length){let e=t[0];if("number"==typeof e[0]&&"number"==typeof e[1]){this.x=e[0],this.y=e[1];return}}if(1===t.length&&t[0]instanceof Object&&"vector"===t[0].name){let{x:e,y:n}=t[0];this.x=e,this.y=n;return}if(2===t.length){let e=t[0],n=t[1];if("number"==typeof e&&"number"==typeof n){this.x=e,this.y=n;return}if(e instanceof f.Point&&n instanceof f.Point){this.x=n.x-e.x,this.y=n.y-e.y;return}}throw u.ILLEGAL_PARAMETERS}clone(){return new f.Vector(this.x,this.y)}get slope(){let t=Math.atan2(this.y,this.x);return t<0&&(t=2*Math.PI+t),t}get length(){return Math.sqrt(this.dot(this))}equalTo(t){return f.Utils.EQ(this.x,t.x)&&f.Utils.EQ(this.y,t.y)}multiply(t){return new f.Vector(t*this.x,t*this.y)}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}normalize(){if(!f.Utils.EQ_0(this.length))return new f.Vector(this.x/this.length,this.y/this.length);throw u.ZERO_DIVISION}rotate(t,e=new f.Point){if(0===e.x&&0===e.y)return this.transform(new tV().rotate(t));throw u.OPERATION_IS_NOT_SUPPORTED}transform(t){return new f.Vector(t.transform([this.x,this.y]))}rotate90CCW(){return new f.Vector(-this.y,this.x)}rotate90CW(){return new f.Vector(this.y,-this.x)}invert(){return new f.Vector(-this.x,-this.y)}add(t){return new f.Vector(this.x+t.x,this.y+t.y)}subtract(t){return new f.Vector(this.x-t.x,this.y-t.y)}angleTo(t){let e=this.normalize(),n=t.normalize(),i=Math.atan2(e.cross(n),e.dot(n));return i<0&&(i+=2*Math.PI),i}projectionOn(t){let e=t.normalize(),n=this.dot(e);return e.multiply(n)}get name(){return"vector"}};f.Vector=tY;let tW=(...t)=>new f.Vector(...t);f.vector=tW;class tz extends tG{constructor(...t){if(super(),this.ps=new f.Point,this.pe=new f.Point,0===t.length)return;if(1===t.length&&t[0]instanceof Array&&4===t[0].length){let e=t[0];this.ps=new f.Point(e[0],e[1]),this.pe=new f.Point(e[2],e[3]);return}if(1===t.length&&t[0]instanceof Object&&"segment"===t[0].name){let{ps:e,pe:n}=t[0];this.ps=new f.Point(e.x,e.y),this.pe=new f.Point(n.x,n.y);return}if(1===t.length&&t[0]instanceof f.Point){this.ps=t[0].clone();return}if(2===t.length&&t[0]instanceof f.Point&&t[1]instanceof f.Point){this.ps=t[0].clone(),this.pe=t[1].clone();return}if(4===t.length){this.ps=new f.Point(t[0],t[1]),this.pe=new f.Point(t[2],t[3]);return}throw u.ILLEGAL_PARAMETERS}clone(){return new f.Segment(this.start,this.end)}get start(){return this.ps}get end(){return this.pe}get vertices(){return[this.ps.clone(),this.pe.clone()]}get length(){return this.start.distanceTo(this.end)[0]}get slope(){return new f.Vector(this.start,this.end).slope}get box(){return new f.Box(Math.min(this.start.x,this.end.x),Math.min(this.start.y,this.end.y),Math.max(this.start.x,this.end.x),Math.max(this.start.y,this.end.y))}equalTo(t){return this.ps.equalTo(t.ps)&&this.pe.equalTo(t.pe)}contains(t){return f.Utils.EQ_0(this.distanceToPoint(t))}intersect(t){return t instanceof f.Point?this.contains(t)?[t]:[]:t instanceof f.Line?to(this,t):t instanceof f.Ray?tb(t,this):t instanceof f.Segment?ta(this,t):t instanceof f.Circle?th(this,t):t instanceof f.Box?function(t,e){let n=[];for(let i of e.toSegments())for(let e of ta(i,t))n.push(e);return n}(this,t):t instanceof f.Arc?tc(this,t):t instanceof f.Polygon?t_(this,t):void 0}distanceTo(t){if(t instanceof f.Point){let[e,n]=f.Distance.point2segment(t,this);return[e,n=n.reverse()]}if(t instanceof f.Circle){let[e,n]=f.Distance.segment2circle(this,t);return[e,n]}if(t instanceof f.Line){let[e,n]=f.Distance.segment2line(this,t);return[e,n]}if(t instanceof f.Segment){let[e,n]=f.Distance.segment2segment(this,t);return[e,n]}if(t instanceof f.Arc){let[e,n]=f.Distance.segment2arc(this,t);return[e,n]}if(t instanceof f.Polygon){let[e,n]=f.Distance.shape2polygon(this,t);return[e,n]}if(t instanceof f.PlanarSet){let[e,n]=f.Distance.shape2planarSet(this,t);return[e,n]}}tangentInStart(){return new f.Vector(this.start,this.end).normalize()}tangentInEnd(){return new f.Vector(this.end,this.start).normalize()}reverse(){return new tz(this.end,this.start)}split(t){return this.start.equalTo(t)?[null,this.clone()]:this.end.equalTo(t)?[this.clone(),null]:[new f.Segment(this.start,t),new f.Segment(t,this.end)]}middle(){return new f.Point((this.start.x+this.end.x)/2,(this.start.y+this.end.y)/2)}pointAtLength(t){if(t>this.length||t<0)return null;if(0==t)return this.start;if(t==this.length)return this.end;let e=t/this.length;return new f.Point((this.end.x-this.start.x)*e+this.start.x,(this.end.y-this.start.y)*e+this.start.y)}distanceToPoint(t){let[e,...n]=f.Distance.point2segment(t,this);return e}definiteIntegral(t=0){return(this.end.x-this.start.x)*(this.start.y-t+(this.end.y-t))/2}transform(t=new f.Matrix){return new tz(this.ps.transform(t),this.pe.transform(t))}isZeroLength(){return this.ps.equalTo(this.pe)}sortPoints(t){return new f.Line(this.start,this.end).sortPoints(t)}get name(){return"segment"}svg(t={}){return`
<line x1="${this.start.x}" y1="${this.start.y}" x2="${this.end.x}" y2="${this.end.y}" ${m(t)} />`}}f.Segment=tz,f.segment=(...t)=>new f.Segment(...t);let{vector:tj}=f,tZ=class t extends tG{constructor(...e){if(super(),this.pt=new f.Point,this.norm=new f.Vector(0,1),0===e.length)return;if(1===e.length&&e[0]instanceof Object&&"line"===e[0].name){let{pt:t,norm:n}=e[0];this.pt=new f.Point(t),this.norm=new f.Vector(n);return}if(2===e.length){let n=e[0],i=e[1];if(n instanceof f.Point&&i instanceof f.Point){this.pt=n,this.norm=t.points2norm(n,i),this.norm.dot(tj(this.pt.x,this.pt.y))>=0&&this.norm.invert();return}if(n instanceof f.Point&&i instanceof f.Vector){if(f.Utils.EQ_0(i.x)&&f.Utils.EQ_0(i.y))throw u.ILLEGAL_PARAMETERS;this.pt=n.clone(),this.norm=i.clone(),this.norm=this.norm.normalize(),this.norm.dot(tj(this.pt.x,this.pt.y))>=0&&this.norm.invert();return}if(n instanceof f.Vector&&i instanceof f.Point){if(f.Utils.EQ_0(n.x)&&f.Utils.EQ_0(n.y))throw u.ILLEGAL_PARAMETERS;this.pt=i.clone(),this.norm=n.clone(),this.norm=this.norm.normalize(),this.norm.dot(tj(this.pt.x,this.pt.y))>=0&&this.norm.invert();return}}throw u.ILLEGAL_PARAMETERS}clone(){return new f.Line(this.pt,this.norm)}get start(){}get end(){}get length(){return Number.POSITIVE_INFINITY}get box(){return new f.Box(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}get middle(){}get slope(){return new f.Vector(this.norm.y,-this.norm.x).slope}get standard(){return[this.norm.x,this.norm.y,this.norm.dot(tj(this.pt.x,this.pt.y))]}parallelTo(t){return f.Utils.EQ_0(this.norm.cross(t.norm))}incidentTo(t){return this.parallelTo(t)&&this.pt.on(t)}contains(t){if(this.pt.equalTo(t))return!0;let e=new f.Vector(this.pt,t);return f.Utils.EQ_0(this.norm.dot(e))}coord(t){return tj(t.x,t.y).cross(this.norm)}intersect(t){return t instanceof f.Point?this.contains(t)?[t]:[]:t instanceof f.Line?tn(this,t):t instanceof f.Ray?tA(t,this):t instanceof f.Circle?ti(this,t):t instanceof f.Box?tr(this,t):t instanceof f.Segment?to(t,this):t instanceof f.Arc?ts(this,t):t instanceof f.Polygon?tv(this,t):void 0}distanceTo(t){if(t instanceof f.Point){let[e,n]=f.Distance.point2line(t,this);return[e,n=n.reverse()]}if(t instanceof f.Circle){let[e,n]=f.Distance.circle2line(t,this);return[e,n=n.reverse()]}if(t instanceof f.Segment){let[e,n]=f.Distance.segment2line(t,this);return[e,n.reverse()]}if(t instanceof f.Arc){let[e,n]=f.Distance.arc2line(t,this);return[e,n.reverse()]}if(t instanceof f.Polygon){let[e,n]=f.Distance.shape2polygon(this,t);return[e,n]}}split(t){if(t instanceof f.Point)return[new f.Ray(t,this.norm),new f.Ray(t,this.norm)];{let e=new f.Multiline([this]),n=this.sortPoints(t);return e.split(n),e.toShapes()}}rotate(t,e=new f.Point){return new f.Line(this.pt.rotate(t,e),this.norm.rotate(t))}transform(t){return new f.Line(this.pt.transform(t),this.norm.clone())}sortPoints(t){return t.slice().sort((t,e)=>this.coord(t)<this.coord(e)?-1:this.coord(t)>this.coord(e)?1:0)}get name(){return"line"}svg(t,e={}){let n=tr(this,t);if(0===n.length)return"";let i=n[0],r=2===n.length?n[1]:n.find(t=>!t.equalTo(i));return void 0===r&&(r=i),new f.Segment(i,r).svg(e)}static points2norm(t,e){if(t.equalTo(e))throw u.ILLEGAL_PARAMETERS;return new f.Vector(t,e).normalize().rotate90CCW()}};f.Line=tZ,f.line=(...t)=>new f.Line(...t);let tH=class extends tG{constructor(...t){if(super(),this.pc=new f.Point,this.r=1,1===t.length&&t[0]instanceof Object&&"circle"===t[0].name){let{pc:e,r:n}=t[0];this.pc=new f.Point(e),this.r=n}else{let[e,n]=[...t];e&&e instanceof f.Point&&(this.pc=e.clone()),void 0!==n&&(this.r=n)}}clone(){return new f.Circle(this.pc.clone(),this.r)}get center(){return this.pc}get box(){return new f.Box(this.pc.x-this.r,this.pc.y-this.r,this.pc.x+this.r,this.pc.y+this.r)}contains(t){return t instanceof f.Point?f.Utils.LE(t.distanceTo(this.center)[0],this.r):t instanceof f.Segment?f.Utils.LE(t.start.distanceTo(this.center)[0],this.r)&&f.Utils.LE(t.end.distanceTo(this.center)[0],this.r):t instanceof f.Arc?0===this.intersect(t).length&&f.Utils.LE(t.start.distanceTo(this.center)[0],this.r)&&f.Utils.LE(t.end.distanceTo(this.center)[0],this.r):t instanceof f.Circle?0===this.intersect(t).length&&f.Utils.LE(t.r,this.r)&&f.Utils.LE(t.center.distanceTo(this.center)[0],this.r):void 0}toArc(t=!0){return new f.Arc(this.center,this.r,Math.PI,-Math.PI,t)}scale(t,e){if(t!==e||!(0===this.pc.x&&0===this.pc.y))throw u.OPERATION_IS_NOT_SUPPORTED;return new f.Circle(this.pc,this.r*t)}transform(t=new f.Matrix){return new f.Circle(this.pc.transform(t),this.r)}intersect(t){return t instanceof f.Point?this.contains(t)?[t]:[]:t instanceof f.Line?ti(t,this):t instanceof f.Ray?tP(t,this):t instanceof f.Segment?th(t,this):t instanceof f.Circle?tf(t,this):t instanceof f.Box?function(t,e){let n=[];for(let i of e.toSegments())for(let e of th(i,t))n.push(e);return n}(this,t):t instanceof f.Arc?tp(t,this):t instanceof f.Polygon?ty(this,t):void 0}distanceTo(t){if(t instanceof f.Point){let[e,n]=f.Distance.point2circle(t,this);return[e,n=n.reverse()]}if(t instanceof f.Circle){let[e,n]=f.Distance.circle2circle(this,t);return[e,n]}if(t instanceof f.Line){let[e,n]=f.Distance.circle2line(this,t);return[e,n]}if(t instanceof f.Segment){let[e,n]=f.Distance.segment2circle(t,this);return[e,n=n.reverse()]}if(t instanceof f.Arc){let[e,n]=f.Distance.arc2circle(t,this);return[e,n=n.reverse()]}if(t instanceof f.Polygon){let[e,n]=f.Distance.shape2polygon(this,t);return[e,n]}if(t instanceof f.PlanarSet){let[e,n]=f.Distance.shape2planarSet(this,t);return[e,n]}}get name(){return"circle"}svg(t={}){return`
<circle cx="${this.pc.x}" cy="${this.pc.y}" r="${this.r}"
                ${m({fill:"none",...t})} />`}};f.Circle=tH,f.circle=(...t)=>new f.Circle(...t),f.Arc=class extends tG{constructor(...t){if(super(),this.pc=new f.Point,this.r=1,this.startAngle=0,this.endAngle=2*Math.PI,this.counterClockwise=f.CCW,0===t.length)return;if(1===t.length&&t[0]instanceof Object&&"arc"===t[0].name){let{pc:e,r:n,startAngle:i,endAngle:r,counterClockwise:s}=t[0];this.pc=new f.Point(e.x,e.y),this.r=n,this.startAngle=i,this.endAngle=r,this.counterClockwise=s}else{let[e,n,i,r,s]=[...t];e&&e instanceof f.Point&&(this.pc=e.clone()),void 0!==n&&(this.r=n),void 0!==i&&(this.startAngle=i),void 0!==r&&(this.endAngle=r),void 0!==s&&(this.counterClockwise=s)}}clone(){return new f.Arc(this.pc.clone(),this.r,this.startAngle,this.endAngle,this.counterClockwise)}get sweep(){let t;return f.Utils.EQ(this.startAngle,this.endAngle)?0:f.Utils.EQ(Math.abs(this.startAngle-this.endAngle),f.PIx2)?f.PIx2:(t=this.counterClockwise?f.Utils.GT(this.endAngle,this.startAngle)?this.endAngle-this.startAngle:this.endAngle-this.startAngle+f.PIx2:f.Utils.GT(this.startAngle,this.endAngle)?this.startAngle-this.endAngle:this.startAngle-this.endAngle+f.PIx2,f.Utils.GT(t,f.PIx2)&&(t-=f.PIx2),f.Utils.LT(t,0)&&(t+=f.PIx2),t)}get start(){return new f.Point(this.pc.x+this.r,this.pc.y).rotate(this.startAngle,this.pc)}get end(){return new f.Point(this.pc.x+this.r,this.pc.y).rotate(this.endAngle,this.pc)}get center(){return this.pc.clone()}get vertices(){return[this.start.clone(),this.end.clone()]}get length(){return Math.abs(this.sweep*this.r)}get box(){return this.breakToFunctional().reduce((t,e)=>t.merge(e.start.box),new f.Box).merge(this.end.box)}contains(t){if(!f.Utils.EQ(this.pc.distanceTo(t)[0],this.r))return!1;if(t.equalTo(this.start))return!0;let e=new f.Vector(this.pc,t).slope,n=new f.Arc(this.pc,this.r,this.startAngle,e,this.counterClockwise);return f.Utils.LE(n.length,this.length)}split(t){if(this.start.equalTo(t))return[null,this.clone()];if(this.end.equalTo(t))return[this.clone(),null];let e=new f.Vector(this.pc,t).slope;return[new f.Arc(this.pc,this.r,this.startAngle,e,this.counterClockwise),new f.Arc(this.pc,this.r,e,this.endAngle,this.counterClockwise)]}middle(){let t=this.counterClockwise?this.startAngle+this.sweep/2:this.startAngle-this.sweep/2;return new f.Arc(this.pc,this.r,this.startAngle,t,this.counterClockwise).end}pointAtLength(t){if(t>this.length||t<0)return null;if(0===t)return this.start;if(t===this.length)return this.end;let e=t/this.length,n=this.counterClockwise?this.startAngle+this.sweep*e:this.startAngle-this.sweep*e;return new f.Arc(this.pc,this.r,this.startAngle,n,this.counterClockwise).end}chordHeight(){return(1-Math.cos(Math.abs(this.sweep/2)))*this.r}intersect(t){return t instanceof f.Point?this.contains(t)?[t]:[]:t instanceof f.Line?ts(t,this):t instanceof f.Ray?tT(t,this):t instanceof f.Circle?tp(this,t):t instanceof f.Segment?tc(t,this):t instanceof f.Box?function(t,e){let n=[];for(let i of e.toSegments())for(let e of tc(i,t))n.push(e);return n}(this,t):t instanceof f.Arc?tu(this,t):t instanceof f.Polygon?tx(this,t):void 0}distanceTo(t){if(t instanceof f.Point){let[e,n]=f.Distance.point2arc(t,this);return[e,n=n.reverse()]}if(t instanceof f.Circle){let[e,n]=f.Distance.arc2circle(this,t);return[e,n]}if(t instanceof f.Line){let[e,n]=f.Distance.arc2line(this,t);return[e,n]}if(t instanceof f.Segment){let[e,n]=f.Distance.segment2arc(t,this);return[e,n=n.reverse()]}if(t instanceof f.Arc){let[e,n]=f.Distance.arc2arc(this,t);return[e,n]}if(t instanceof f.Polygon){let[e,n]=f.Distance.shape2polygon(this,t);return[e,n]}if(t instanceof f.PlanarSet){let[e,n]=f.Distance.shape2planarSet(this,t);return[e,n]}}breakToFunctional(){let t=[],e=[0,Math.PI/2,2*Math.PI/2,3*Math.PI/2],n=[this.pc.translate(this.r,0),this.pc.translate(0,this.r),this.pc.translate(-this.r,0),this.pc.translate(0,-this.r)],i=[];for(let t=0;t<4;t++)n[t].on(this)&&i.push(new f.Arc(this.pc,this.r,this.startAngle,e[t],this.counterClockwise));if(0===i.length)t.push(this.clone());else{let e;i.sort((t,e)=>t.length-e.length);for(let e=0;e<i.length;e++){let n,r=t.length>0?t[t.length-1]:void 0;n=r?new f.Arc(this.pc,this.r,r.endAngle,i[e].endAngle,this.counterClockwise):new f.Arc(this.pc,this.r,this.startAngle,i[e].endAngle,this.counterClockwise),f.Utils.EQ_0(n.length)||t.push(n.clone())}let n=t.length>0?t[t.length-1]:void 0;e=n?new f.Arc(this.pc,this.r,n.endAngle,this.endAngle,this.counterClockwise):new f.Arc(this.pc,this.r,this.startAngle,this.endAngle,this.counterClockwise),f.Utils.EQ_0(e.length)||f.Utils.EQ(e.sweep,2*Math.PI)||t.push(e.clone())}return t}tangentInStart(){let t=new f.Vector(this.pc,this.start),e=this.counterClockwise?Math.PI/2:-Math.PI/2;return t.rotate(e).normalize()}tangentInEnd(){let t=new f.Vector(this.pc,this.end),e=this.counterClockwise?-Math.PI/2:Math.PI/2;return t.rotate(e).normalize()}reverse(){return new f.Arc(this.pc,this.r,this.endAngle,this.startAngle,!this.counterClockwise)}transform(t=new f.Matrix){let e=this.start.transform(t),n=this.end.transform(t),i=this.pc.transform(t),r=this.counterClockwise;return t.a*t.d<0&&(r=!r),f.Arc.arcSE(i,e,n,r)}static arcSE(t,e,n,i){let{vector:r}=f,s=r(t,e).slope,o=r(t,n).slope;f.Utils.EQ(s,o)&&(o+=2*Math.PI,i=!0);let a=r(t,e).length;return new f.Arc(t,a,s,o,i)}definiteIntegral(t=0){return this.breakToFunctional().reduce((e,n)=>e+n.circularSegmentDefiniteIntegral(t),0)}circularSegmentDefiniteIntegral(t){let e=new f.Line(this.start,this.end),n=this.pc.leftTo(e),i=new f.Segment(this.start,this.end).definiteIntegral(t),r=this.circularSegmentArea();return n?i-r:i+r}circularSegmentArea(){return .5*this.r*this.r*(this.sweep-Math.sin(this.sweep))}sortPoints(t){let{vector:e}=f;return t.slice().sort((t,n)=>{let i=e(this.pc,t).slope,r=e(this.pc,n).slope;return i<r?-1:i>r?1:0})}get name(){return"arc"}svg(t={}){let e=this.sweep<=Math.PI?"0":"1",n=this.counterClockwise?"1":"0";return f.Utils.EQ(this.sweep,2*Math.PI)?new f.Circle(this.pc,this.r).svg(t):`
<path d="M${this.start.x},${this.start.y}
                             A${this.r},${this.r} 0 ${e},${n} ${this.end.x},${this.end.y}"
                    ${m({fill:"none",...t})} />`}},f.arc=(...t)=>new f.Arc(...t);class tJ extends tG{constructor(t,e,n,i){super(),this.xmin=t,this.ymin=e,this.xmax=n,this.ymax=i}clone(){return new tJ(this.xmin,this.ymin,this.xmax,this.ymax)}get low(){return new f.Point(this.xmin,this.ymin)}get high(){return new f.Point(this.xmax,this.ymax)}get max(){return this.clone()}get center(){return new f.Point((this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)}get width(){return Math.abs(this.xmax-this.xmin)}get height(){return Math.abs(this.ymax-this.ymin)}get box(){return this.clone()}not_intersect(t){return this.xmax<t.xmin||this.xmin>t.xmax||this.ymax<t.ymin||this.ymin>t.ymax}intersect(t){return!this.not_intersect(t)}merge(t){return new tJ(void 0===this.xmin?t.xmin:Math.min(this.xmin,t.xmin),void 0===this.ymin?t.ymin:Math.min(this.ymin,t.ymin),void 0===this.xmax?t.xmax:Math.max(this.xmax,t.xmax),void 0===this.ymax?t.ymax:Math.max(this.ymax,t.ymax))}less_than(t){return!!(this.low.lessThan(t.low)||this.low.equalTo(t.low)&&this.high.lessThan(t.high))}equal_to(t){return this.low.equalTo(t.low)&&this.high.equalTo(t.high)}output(){return this.clone()}static comparable_max(t,e){return t.merge(e)}static comparable_less_than(t,e){return t.lessThan(e)}set(t,e,n,i){this.xmin=t,this.ymin=e,this.xmax=n,this.ymax=i}toPoints(){return[new f.Point(this.xmin,this.ymin),new f.Point(this.xmax,this.ymin),new f.Point(this.xmax,this.ymax),new f.Point(this.xmin,this.ymax)]}toSegments(){let t=this.toPoints();return[new f.Segment(t[0],t[1]),new f.Segment(t[1],t[2]),new f.Segment(t[2],t[3]),new f.Segment(t[3],t[0])]}rotate(t,e=new f.Point){throw u.OPERATION_IS_NOT_SUPPORTED}transform(t=new f.Matrix){return this.toPoints().map(e=>e.transform(t)).reduce((t,e)=>t.merge(e.box),new tJ)}contains(t){return t instanceof f.Point?t.x>=this.xmin&&t.x<=this.xmax&&t.y>=this.ymin&&t.y<=this.ymax:t instanceof f.Segment?t.vertices.every(t=>this.contains(t)):t instanceof f.Box?t.toSegments().every(t=>this.contains(t)):t instanceof f.Circle?this.contains(t.box):t instanceof f.Arc?t.vertices.every(t=>this.contains(t))&&t.toSegments().every(e=>0===tc(e,t).length):!(t instanceof f.Line)&&!(t instanceof f.Ray)&&(t instanceof f.Multiline?t.toShapes().every(t=>this.contains(t)):t instanceof f.Polygon?this.contains(t.box):void 0)}get name(){return"box"}svg(t={}){let e=this.xmax-this.xmin,n=this.ymax-this.ymin;return`
<rect x="${this.xmin}" y="${this.ymin}" width=${e} height=${n}
                ${m({fill:"none",...t})} />`}}f.Box=tJ,f.box=(...t)=>new f.Box(...t),f.Edge=class{constructor(t){this.shape=t,this.next=void 0,this.prev=void 0,this.face=void 0,this.arc_length=0,this.bvStart=void 0,this.bvEnd=void 0,this.bv=void 0,this.overlap=void 0}get start(){return this.shape.start}get end(){return this.shape.end}get length(){return this.shape.length}get box(){return this.shape.box}get isSegment(){return this.shape instanceof f.Segment}get isArc(){return this.shape instanceof f.Arc}get isLine(){return this.shape instanceof f.Line}get isRay(){return this.shape instanceof f.Ray}middle(){return this.shape.middle()}pointAtLength(t){return this.shape.pointAtLength(t)}contains(t){return this.shape.contains(t)}setInclusion(t){if(void 0!==this.bv)return this.bv;if(this.shape instanceof f.Line||this.shape instanceof f.Ray)return this.bv=f.OUTSIDE,this.bv;if(void 0===this.bvStart&&(this.bvStart=tO(t,this.start)),void 0===this.bvEnd&&(this.bvEnd=tO(t,this.end)),this.bvStart===f.OUTSIDE||this.bvEnd==f.OUTSIDE)this.bv=f.OUTSIDE;else if(this.bvStart===f.INSIDE||this.bvEnd==f.INSIDE)this.bv=f.INSIDE;else{let e=tO(t,this.middle());this.bv=e}return this.bv}setOverlap(t){let e;let n=this.shape,i=t.shape;n instanceof f.Segment&&i instanceof f.Segment?n.start.equalTo(i.start)&&n.end.equalTo(i.end)?e=f.OVERLAP_SAME:n.start.equalTo(i.end)&&n.end.equalTo(i.start)&&(e=f.OVERLAP_OPPOSITE):n instanceof f.Arc&&i instanceof f.Arc?n.start.equalTo(i.start)&&n.end.equalTo(i.end)&&n.middle().equalTo(i.middle())?e=f.OVERLAP_SAME:n.start.equalTo(i.end)&&n.end.equalTo(i.start)&&n.middle().equalTo(i.middle())&&(e=f.OVERLAP_OPPOSITE):(n instanceof f.Segment&&i instanceof f.Arc||n instanceof f.Arc&&i instanceof f.Segment)&&(n.start.equalTo(i.start)&&n.end.equalTo(i.end)&&n.middle().equalTo(i.middle())?e=f.OVERLAP_SAME:n.start.equalTo(i.end)&&n.end.equalTo(i.start)&&n.middle().equalTo(i.middle())&&(e=f.OVERLAP_OPPOSITE)),void 0===this.overlap&&(this.overlap=e),void 0===t.overlap&&(t.overlap=e)}svg(){if(this.shape instanceof f.Segment)return` L${this.shape.end.x},${this.shape.end.y}`;if(this.shape instanceof f.Arc){let t,e=this.shape,n=e.counterClockwise?"1":"0";if(!f.Utils.EQ(e.sweep,2*Math.PI))return t=e.sweep<=Math.PI?"0":"1",` A${e.r},${e.r} 0 ${t},${n} ${e.end.x},${e.end.y}`;{let i=e.counterClockwise?1:-1,r=new f.Arc(e.pc,e.r,e.startAngle,e.startAngle+i*Math.PI,e.counterClockwise),s=new f.Arc(e.pc,e.r,e.startAngle+i*Math.PI,e.endAngle,e.counterClockwise);return t="0",` A${r.r},${r.r} 0 ${t},${n} ${r.end.x},${r.end.y}
                    A${s.r},${s.r} 0 ${t},${n} ${s.end.x},${s.end.y}`}}}toJSON(){return this.shape.toJSON()}};class tK extends p{constructor(t,e){super(t,e),this.setCircularLinks()}setCircularLinks(){this.isEmpty()||(this.last.next=this.first,this.first.prev=this.last)}[Symbol.iterator](){let t;return{next:()=>{let e=t||this.first,n=!this.first||!!t&&t===this.first;return t=e?e.next:void 0,{value:e,done:n}}}}append(t){return super.append(t),this.setCircularLinks(),this}insert(t,e){return super.insert(t,e),this.setCircularLinks(),this}remove(t){return super.remove(t),this}}class tX extends tK{constructor(t,...e){if(super(),this._box=void 0,this._orientation=void 0,0===e.length)return;if(1===e.length){if(e[0]instanceof Array){let n=e[0];if(0===n.length)return;if(n.every(t=>t instanceof f.Point)){let e=tX.points2segments(n);this.shapes2face(t.edges,e)}else if(n.every(t=>t instanceof Array&&2===t.length)){let e=n.map(t=>new f.Point(t[0],t[1])),i=tX.points2segments(e);this.shapes2face(t.edges,i)}else if(n.every(t=>t instanceof f.Segment||t instanceof f.Arc))this.shapes2face(t.edges,n);else if(n.every(t=>"segment"===t.name||"arc"===t.name)){let e=[];for(let t of n){let n;n="segment"===t.name?new f.Segment(t):new f.Arc(t),e.push(n)}this.shapes2face(t.edges,e)}}else if(e[0]instanceof tX){let n=e[0];for(let e of(this.first=n.first,this.last=n.last,n))t.edges.add(e)}else if(e[0]instanceof f.Circle)this.shapes2face(t.edges,[e[0].toArc(!0)]);else if(e[0]instanceof f.Box){let n=e[0];this.shapes2face(t.edges,[new f.Segment(new f.Point(n.xmin,n.ymin),new f.Point(n.xmax,n.ymin)),new f.Segment(new f.Point(n.xmax,n.ymin),new f.Point(n.xmax,n.ymax)),new f.Segment(new f.Point(n.xmax,n.ymax),new f.Point(n.xmin,n.ymax)),new f.Segment(new f.Point(n.xmin,n.ymax),new f.Point(n.xmin,n.ymin))])}}2===e.length&&e[0]instanceof f.Edge&&e[1]instanceof f.Edge&&(this.first=e[0],this.last=e[1],this.last.next=this.first,this.first.prev=this.last,this.setArcLength())}get edges(){return this.toArray()}get shapes(){return this.edges.map(t=>t.shape.clone())}get box(){if(void 0===this._box){let t=new f.Box;for(let e of this)t=t.merge(e.box);this._box=t}return this._box}get perimeter(){return this.last.arc_length+this.last.length}pointAtLength(t){if(t>this.perimeter||t<0)return null;let e=null;for(let n of this)if(t>=n.arc_length&&(n===this.last||t<n.next.arc_length)){e=n.pointAtLength(t-n.arc_length);break}return e}static points2segments(t){let e=[];for(let n=0;n<t.length;n++)t[n].equalTo(t[(n+1)%t.length])||e.push(new f.Segment(t[n],t[(n+1)%t.length]));return e}shapes2face(t,e){for(let n of e){let e=new f.Edge(n);this.append(e),t.add(e)}}append(t){return super.append(t),this.setOneEdgeArcLength(t),t.face=this,this}insert(t,e){return super.insert(t,e),this.setOneEdgeArcLength(t),t.face=this,this}remove(t){return super.remove(t),this.setArcLength(),this}merge_with_next_edge(t){return t.shape.end.x=t.next.shape.end.x,t.shape.end.y=t.next.shape.end.y,this.remove(t.next),this}reverse(){let t=[],e=this.last;do e.shape=e.shape.reverse(),t.push(e),e=e.prev;while(e!==this.last)for(let e of(this.first=void 0,this.last=void 0,t))void 0===this.first?(e.prev=e,e.next=e,this.first=e,this.last=e):(e.prev=this.last,this.last.next=e,this.last=e,this.last.next=this.first,this.first.prev=this.last),this.setOneEdgeArcLength(e);void 0!==this._orientation&&(this._orientation=void 0,this._orientation=this.orientation())}setArcLength(){for(let t of this)this.setOneEdgeArcLength(t),t.face=this}setOneEdgeArcLength(t){t===this.first?t.arc_length=0:t.arc_length=t.prev.arc_length+t.prev.length}area(){return Math.abs(this.signedArea())}signedArea(){let t=0,e=this.box.ymin;for(let n of this)t+=n.shape.definiteIntegral(e);return t}orientation(){if(void 0===this._orientation){let t=this.signedArea();f.Utils.EQ_0(t)?this._orientation=n.NOT_ORIENTABLE:f.Utils.LT(t,0)?this._orientation=n.CCW:this._orientation=n.CW}return this._orientation}isSimple(t){return 0===tX.getSelfIntersections(this,t,!0).length}static getSelfIntersections(t,e,n=!1){let i=[];for(let r of t){for(let s of e.search(r.box))if(r!==s&&s.face===t&&(!(r.shape instanceof f.Segment)||!(s.shape instanceof f.Segment)||r.next!==s&&r.prev!==s)){for(let t of r.shape.intersect(s.shape))if((!(t.equalTo(r.start)&&t.equalTo(s.end))||s!==r.prev)&&(!(t.equalTo(r.end)&&t.equalTo(s.start))||s!==r.next)&&(i.push(t),n))break;if(i.length>0&&n)break}if(i.length>0&&n)break}return i}findEdgeByPoint(t){let e;for(let n of this)if(!t.equalTo(n.shape.start)&&(t.equalTo(n.shape.end)||n.shape.contains(t))){e=n;break}return e}toPolygon(){return new f.Polygon(this.shapes)}toJSON(){return this.edges.map(t=>t.toJSON())}svg(){let t=`M${this.first.start.x},${this.first.start.y}`;for(let e of this)t+=e.svg();return t+" z"}}f.Face=tX;class t0 extends tG{constructor(...t){if(super(),this.pt=new f.Point,this.norm=new f.Vector(0,1),0===t.length||(t.length>=1&&t[0]instanceof f.Point&&(this.pt=t[0].clone()),1===t.length))return;if(2===t.length&&t[1]instanceof f.Vector){this.norm=t[1].clone();return}throw u.ILLEGAL_PARAMETERS}clone(){return new t0(this.pt,this.norm)}get slope(){return new f.Vector(this.norm.y,-this.norm.x).slope}get box(){let t=this.slope;return new f.Box(t>Math.PI/2&&t<3*Math.PI/2?Number.NEGATIVE_INFINITY:this.pt.x,t>=0&&t<=Math.PI?this.pt.y:Number.NEGATIVE_INFINITY,t>=Math.PI/2&&t<=3*Math.PI/2?this.pt.x:Number.POSITIVE_INFINITY,t>=Math.PI&&t<=2*Math.PI||0===t?this.pt.y:Number.POSITIVE_INFINITY)}get start(){return this.pt}get end(){}get length(){return Number.POSITIVE_INFINITY}contains(t){if(this.pt.equalTo(t))return!0;let e=new f.Vector(this.pt,t);return f.Utils.EQ_0(this.norm.dot(e))&&f.Utils.GE(e.cross(this.norm),0)}coord(t){return tW(t.x,t.y).cross(this.norm)}split(t){return this.contains(t)?this.pt.equalTo(t)?[this]:[new f.Segment(this.pt,t),new f.Ray(t,this.norm)]:[]}intersect(t){var e,n;return t instanceof f.Point?this.contains(t)?[t]:[]:t instanceof f.Segment?tb(this,t):t instanceof f.Arc?tT(this,t):t instanceof f.Line?tA(this,t):t instanceof f.Ray?(e=this,tn(tI(e),tI(t)).filter(t=>e.contains(t)).filter(e=>t.contains(e))):t instanceof f.Circle?tP(this,t):t instanceof f.Box?(n=this,tr(tI(n),t).filter(t=>n.contains(t))):t instanceof f.Polygon?tS(this,t):void 0}rotate(t,e=new f.Point){return new f.Ray(this.pt.rotate(t,e),this.norm.rotate(t))}transform(t){return new f.Ray(this.pt.transform(t),this.norm.clone())}get name(){return"ray"}svg(t,e={}){let n=tr(new f.Line(this.pt,this.norm),t);return 0===(n=n.filter(t=>this.contains(t))).length||2===n.length?"":new f.Segment(this.pt,n[0]).svg(e)}}f.Ray=t0,f.ray=(...t)=>new f.Ray(...t);class t2{constructor(){this.faces=new f.PlanarSet,this.edges=new f.PlanarSet;let t=[...arguments];if(1===t.length&&(t[0]instanceof Array&&t[0].length>0||t[0]instanceof f.Circle||t[0]instanceof f.Box)){let e=t[0];if(t[0]instanceof Array&&t[0].every(t=>t instanceof Array)){if(e.every(t=>t instanceof Array&&2===t.length&&"number"==typeof t[0]&&"number"==typeof t[1]))this.faces.add(new f.Face(this,e));else for(let t of e)if(t instanceof Array&&t[0]instanceof Array&&t[0].every(t=>t instanceof Array&&2===t.length&&"number"==typeof t[0]&&"number"==typeof t[1]))for(let e of t)this.faces.add(new f.Face(this,e));else this.faces.add(new f.Face(this,t))}else this.faces.add(new f.Face(this,e))}}get box(){return[...this.faces].reduce((t,e)=>t.merge(e.box),new f.Box)}get vertices(){return[...this.edges].map(t=>t.start)}clone(){let t=new t2;for(let e of this.faces)t.addFace(e.shapes);return t}isEmpty(){return 0===this.edges.size}isValid(){let t=!0;for(let e of this.faces)if(!e.isSimple(this.edges)){t=!1;break}return t}area(){return Math.abs([...this.faces].reduce((t,e)=>t+e.signedArea(),0))}addFace(...t){let e=new f.Face(this,...t);return this.faces.add(e),e}deleteFace(t){for(let e of t)this.edges.delete(e);return this.faces.delete(t)}recreateFaces(){let t;for(let t of(this.faces.clear(),this.edges))t.face=null;let e=!0;for(;e;){for(let n of(e=!1,this.edges))if(null===n.face){t=n,e=!0;break}if(e){let e=t;do e=e.next;while(e.next!==t)this.addFace(t,e)}}}removeChain(t,e,n){if(n.next===e){this.deleteFace(t);return}for(let i=e;i!==n.next;i=i.next)if(t.remove(i),this.edges.delete(i),t.isEmpty()){this.deleteFace(t);break}}addVertex(t,e){let n=e.shape.split(t);if(null===n[0])return e.prev;if(null===n[1])return e;let i=new f.Edge(n[0]),r=e.prev;return e.face.insert(i,r),this.edges.delete(e),this.edges.add(i),e.shape=n[1],this.edges.add(e),i}removeEndVertex(t){let e=t.next;e!==t&&(t.face.merge_with_next_edge(t),this.edges.delete(e))}cut(t){let e,n,i=this.clone(),r={int_points1:[],int_points2:[],int_points1_sorted:[],int_points2_sorted:[]};for(let e of t.edges)for(let t of i.edges)for(let n of tw(e,t))x(e,n,r.int_points1),x(t,n,r.int_points2);if(0===r.int_points1.length)return i;for(let e of(r.int_points1_sorted=y(r.int_points1),r.int_points2_sorted=y(r.int_points2),P(t,r.int_points1_sorted),P(i,r.int_points2_sorted),E(r),r.int_points1_sorted=y(r.int_points1),r.int_points2_sorted=y(r.int_points2),I(r.int_points1),b(r.int_points1,i),r.int_points1_sorted))e.edge_before&&e.edge_after&&e.edge_before.bv===e.edge_after.bv&&(r.int_points2[e.id]=-1,e.id=-1);if(r.int_points1=r.int_points1.filter(t=>t.id>=0),r.int_points2=r.int_points2.filter(t=>t.id>=0),r.int_points1.forEach((t,e)=>{t.id=e}),r.int_points2.forEach((t,e)=>{t.id=e}),0===r.int_points1.length)return i;r.int_points1_sorted=y(r.int_points1),r.int_points2_sorted=y(r.int_points2);for(let s=1;s<r.int_points1_sorted.length;s++)if(n=r.int_points1_sorted[s],e=r.int_points1_sorted[s-1],n.edge_before&&1===n.edge_before.bv){let s=e.edge_after,o=n.edge_before,a=t.getChain(s,o);A(r.int_points2[e.id],r.int_points2[n.id],a),a.forEach(t=>i.edges.add(t)),a=a.reverse().map(t=>new f.Edge(t.shape.reverse()));for(let t=0;t<a.length-1;t++)a[t].next=a[t+1],a[t+1].prev=a[t];A(r.int_points2[n.id],r.int_points2[e.id],a),a.forEach(t=>i.edges.add(t))}return i.recreateFaces(),i}cutWithLine(t){let e=new _([t]);return this.cut(e)}findEdgeByPoint(t){let e;for(let n of this.faces)if(void 0!==(e=n.findEdgeByPoint(t)))break;return e}splitToIslands(){if(this.isEmpty())return[];let t=this.toArray();t.sort((t,e)=>e.area()-t.area());let e=[...t[0].faces][0].orientation(),n=t.filter(t=>[...t.faces][0].orientation()===e);for(let i of t){let t=[...i.faces][0];if(t.orientation()!==e){for(let e of n)if(t.shapes.every(t=>e.contains(t))){e.addFace(t.shapes);break}}}return n}reverse(){for(let t of this.faces)t.reverse();return this}contains(t){if(!(t instanceof f.Point))return tM(this,t);{let e=tO(this,t);return 1===e||2===e}}distanceTo(t){if(t instanceof f.Point){let[e,n]=f.Distance.point2polygon(t,this);return[e,n=n.reverse()]}if(t instanceof f.Circle||t instanceof f.Line||t instanceof f.Segment||t instanceof f.Arc){let[e,n]=f.Distance.shape2polygon(t,this);return[e,n=n.reverse()]}if(t instanceof f.Polygon){let e,n,i=[Number.POSITIVE_INFINITY,new f.Segment];for(let r of this.edges){let s=i[0];[e,n]=f.Distance.shape2planarSet(r.shape,t.edges,s),f.Utils.LT(e,s)&&(i=[e,n])}return i}}intersect(t){return t instanceof f.Point?this.contains(t)?[t]:[]:t instanceof f.Line?tv(t,this):t instanceof f.Ray?tS(t,this):t instanceof f.Circle?ty(t,this):t instanceof f.Segment?t_(t,this):t instanceof f.Arc?tx(t,this):t instanceof f.Polygon?function(t,e){let n=[];if(t.isEmpty()||e.isEmpty()||t.box.not_intersect(e.box))return n;for(let i of t.edges)n=[...n,...function(t,e){let n=[];if(e.isEmpty()||t.shape.box.not_intersect(e.box))return n;for(let i of e.edges.search(t.shape.box))n=[...n,...tw(t,i)];return n}(i,e)];return n}(t,this):void 0}translate(t){let e=new t2;for(let n of this.faces)e.addFace(n.shapes.map(e=>e.translate(t)));return e}rotate(t=0,e=new f.Point){let n=new t2;for(let i of this.faces)n.addFace(i.shapes.map(n=>n.rotate(t,e)));return n}scale(t,e){let n=new t2;for(let i of this.faces)n.addFace(i.shapes.map(n=>n.scale(t,e)));return n}transform(t=new f.Matrix){let e=new t2;for(let n of this.faces)e.addFace(n.shapes.map(e=>e.transform(t)));return e}toJSON(){return[...this.faces].map(t=>t.toJSON())}toArray(){return[...this.faces].map(t=>t.toPolygon())}dpath(){return[...this.faces].reduce((t,e)=>t+e.svg(),"")}svg(t={}){let e=`
<path ${m({fillRule:"evenodd",fill:"lightcyan",...t})} d="`;for(let t of this.faces)e+=`
${t.svg()}`;return e+`" >
</path>`}}f.Polygon=t2,f.polygon=(...t)=>new f.Polygon(...t);let{Circle:t1,Line:t3,Point:t9,Vector:t4,Utils:t5}=f;class t6{constructor(t){this.circle=t}get inversion_circle(){return this.circle}static inversePoint(t,e){let n=new t4(t.pc,e),i=t.r*t.r,r=n.dot(n);return t5.EQ_0(r)?new t9(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY):t.pc.translate(n.multiply(i/r))}static inverseCircle(t,e){let n=t.pc.distanceTo(e.pc)[0];if(t5.EQ(n,e.r)){let n=t.r*t.r/(2*e.r),i=new t4(t.pc,e.pc);return i=i.normalize(),new t3(t.pc.translate(i.multiply(n)),i)}{let n=new t4(t.pc,e.pc),i=t.r*t.r/(n.dot(n)-e.r*e.r);return new t1(t.pc.translate(n.multiply(i)),Math.abs(i)*e.r)}}static inverseLine(t,e){let[n,i]=t.pc.distanceTo(e);if(t5.EQ_0(n))return e.clone();{let e=t.r*t.r/(2*n),r=new t4(t.pc,i.end);return r=r.multiply(e/n),new t1(t.pc.translate(r),e)}}inverse(t){return t instanceof t9?t6.inversePoint(this.circle,t):t instanceof t1?t6.inverseCircle(this.circle,t):t instanceof t3?t6.inverseLine(this.circle,t):void 0}}f.Inversion=t6,f.inversion=t=>new f.Inversion(t);class t7{static point2point(t,e){return t.distanceTo(e)}static point2line(t,e){let n=t.projectionOn(e);return[new f.Vector(t,n).length,new f.Segment(t,n)]}static point2circle(t,e){let[n,i]=t.distanceTo(e.center);if(f.Utils.EQ_0(n))return[e.r,new f.Segment(t,e.toArc().start)];{let i=Math.abs(n-e.r),r=new f.Vector(e.pc,t).normalize().multiply(e.r),s=e.pc.translate(r);return[i,new f.Segment(t,s)]}}static point2segment(t,e){let n,i;if(e.start.equalTo(e.end))return t7.point2point(t,e.start);let r=new f.Vector(e.start,e.end),s=new f.Vector(e.start,t),o=new f.Vector(e.end,t),a=r.dot(s),l=-r.dot(o);if(f.Utils.GE(a,0)&&f.Utils.GE(l,0)){let r=e.tangentInStart();return n=Math.abs(r.cross(s)),i=e.start.translate(r.multiply(r.dot(s))),[n,new f.Segment(t,i)]}return a<0?t.distanceTo(e.start):t.distanceTo(e.end)}static point2arc(t,e){let n,i,r=new f.Circle(e.pc,e.r),s=[];return[n,i]=t7.point2circle(t,r),i.end.on(e)&&s.push(t7.point2circle(t,r)),s.push(t7.point2point(t,e.start)),s.push(t7.point2point(t,e.end)),t7.sort(s),s[0]}static segment2line(t,e){let n=t.intersect(e);if(n.length>0)return[0,new f.Segment(n[0],n[0])];let i=[];return i.push(t7.point2line(t.start,e)),i.push(t7.point2line(t.end,e)),t7.sort(i),i[0]}static segment2segment(t,e){let n,i,r=ta(t,e);if(r.length>0)return[0,new f.Segment(r[0],r[0])];let s=[];return[n,i]=t7.point2segment(e.start,t),s.push([n,i.reverse()]),[n,i]=t7.point2segment(e.end,t),s.push([n,i.reverse()]),s.push(t7.point2segment(t.start,e)),s.push(t7.point2segment(t.end,e)),t7.sort(s),s[0]}static segment2circle(t,e){let n=t.intersect(e);if(n.length>0)return[0,new f.Segment(n[0],n[0])];let i=new f.Line(t.ps,t.pe),[r,s]=t7.point2line(e.center,i);if(f.Utils.GE(r,e.r)&&s.end.on(t))return t7.point2circle(s.end,e);{let[n,i]=t7.point2circle(t.start,e),[r,s]=t7.point2circle(t.end,e);return f.Utils.LT(n,r)?[n,i]:[r,s]}}static segment2arc(t,e){let n,i,r=t.intersect(e);if(r.length>0)return[0,new f.Segment(r[0],r[0])];let s=new f.Line(t.ps,t.pe),o=new f.Circle(e.pc,e.r),[a,l]=t7.point2line(o.center,s);if(f.Utils.GE(a,o.r)&&l.end.on(t)){let[t,n]=t7.point2circle(l.end,o);if(n.end.on(e))return[t,n]}let h=[];return h.push(t7.point2arc(t.start,e)),h.push(t7.point2arc(t.end,e)),[n,i]=t7.point2segment(e.start,t),h.push([n,i.reverse()]),[n,i]=t7.point2segment(e.end,t),h.push([n,i.reverse()]),t7.sort(h),h[0]}static circle2circle(t,e){let n=t.intersect(e);if(n.length>0)return[0,new f.Segment(n[0],n[0])];if(t.center.equalTo(e.center)){let n=t.toArc(),i=e.toArc();return t7.point2point(n.start,i.start)}{let n=new f.Line(t.center,e.center),i=n.intersect(t),r=n.intersect(e),s=[];return s.push(t7.point2point(i[0],r[0])),s.push(t7.point2point(i[0],r[1])),s.push(t7.point2point(i[1],r[0])),s.push(t7.point2point(i[1],r[1])),t7.sort(s),s[0]}}static circle2line(t,e){let n=t.intersect(e);if(n.length>0)return[0,new f.Segment(n[0],n[0])];let[i,r]=t7.point2line(t.center,e),[s,o]=t7.point2circle(r.end,t);return[s,o=o.reverse()]}static arc2line(t,e){let n=e.intersect(t);if(n.length>0)return[0,new f.Segment(n[0],n[0])];let i=new f.Circle(t.center,t.r),[r,s]=t7.point2line(i.center,e);if(f.Utils.GE(r,i.r)){let[e,n]=t7.point2circle(s.end,i);if(n.end.on(t))return[e,n]}else{let n=[];return n.push(t7.point2line(t.start,e)),n.push(t7.point2line(t.end,e)),t7.sort(n),n[0]}}static arc2circle(t,e){let n=t.intersect(e);if(n.length>0)return[0,new f.Segment(n[0],n[0])];let i=new f.Circle(t.center,t.r),[r,s]=t7.circle2circle(i,e);if(s.start.on(t))return[r,s];{let n=[];return n.push(t7.point2circle(t.start,e)),n.push(t7.point2circle(t.end,e)),t7.sort(n),n[0]}}static arc2arc(t,e){let n=t.intersect(e);if(n.length>0)return[0,new f.Segment(n[0],n[0])];let i=new f.Circle(t.center,t.r),r=new f.Circle(e.center,e.r),[s,o]=t7.circle2circle(i,r);if(o.start.on(t)&&o.end.on(e))return[s,o];{let n,i,r=[];return[n,i]=t7.point2arc(t.start,e),i.end.on(e)&&r.push([n,i]),[n,i]=t7.point2arc(t.end,e),i.end.on(e)&&r.push([n,i]),[n,i]=t7.point2arc(e.start,t),i.end.on(t)&&r.push([n,i.reverse()]),[n,i]=t7.point2arc(e.end,t),i.end.on(t)&&r.push([n,i.reverse()]),[n,i]=t7.point2point(t.start,e.start),r.push([n,i]),[n,i]=t7.point2point(t.start,e.end),r.push([n,i]),[n,i]=t7.point2point(t.end,e.start),r.push([n,i]),[n,i]=t7.point2point(t.end,e.end),r.push([n,i]),t7.sort(r),r[0]}}static point2polygon(t,e){let n=[Number.POSITIVE_INFINITY,new f.Segment];for(let i of e.edges){let[e,r]=i.shape instanceof f.Segment?t7.point2segment(t,i.shape):t7.point2arc(t,i.shape);f.Utils.LT(e,n[0])&&(n=[e,r])}return n}static shape2polygon(t,e){let n=[Number.POSITIVE_INFINITY,new f.Segment];for(let i of e.edges){let[e,r]=t.distanceTo(i.shape);f.Utils.LT(e,n[0])&&(n=[e,r])}return n}static polygon2polygon(t,e){let n=[Number.POSITIVE_INFINITY,new f.Segment];for(let i of t.edges)for(let t of e.edges){let[e,r]=i.shape.distanceTo(t.shape);f.Utils.LT(e,n[0])&&(n=[e,r])}return n}static box2box_minmax(t,e){let n=Math.max(Math.max(t.xmin-e.xmax,0),Math.max(e.xmin-t.xmax,0)),i=Math.max(Math.max(t.ymin-e.ymax,0),Math.max(e.ymin-t.ymax,0)),r=t.merge(e),s=r.xmax-r.xmin,o=r.ymax-r.ymin;return[n*n+i*i,s*s+o*o]}static minmax_tree_process_level(t,e,n,i){let r,s;for(let o of e)[r,s]=t7.box2box_minmax(t.box,o.item.key),o.item.value instanceof f.Edge?i.insert([r,s],o.item.value.shape):i.insert([r,s],o.item.value),f.Utils.LT(s,n)&&(n=s);if(0===e.length)return n;let o=[...e.map(t=>t.left.isNil()?void 0:t.left).filter(t=>void 0!==t),...e.map(t=>t.right.isNil()?void 0:t.right).filter(t=>void 0!==t)].filter(e=>{let[i,r]=t7.box2box_minmax(t.box,e.max);return f.Utils.LE(i,n)});return n=t7.minmax_tree_process_level(t,o,n,i)}static minmax_tree(t,e,n){let i=new tF,r=[e.index.root],s=n<Number.POSITIVE_INFINITY?n*n:Number.POSITIVE_INFINITY;return s=t7.minmax_tree_process_level(t,r,s,i),i}static minmax_tree_calc_distance(t,e,n){let i,r;if(null!=e&&!e.isNil()){if([i,r]=t7.minmax_tree_calc_distance(t,e.left,n),r)return[i,r];if(f.Utils.LT(i[0],Math.sqrt(e.item.key.low)))return[i,!0];let[s,o]=t7.distance(t,e.item.value);return f.Utils.LT(s,i[0])&&(i=[s,o]),[i,r]=t7.minmax_tree_calc_distance(t,e.right,i),[i,r]}return[n,!1]}static shape2planarSet(t,e,n=Number.POSITIVE_INFINITY){let i=[n,new f.Segment],r=!1;if(e instanceof f.PlanarSet){let s=t7.minmax_tree(t,e,n);[i,r]=t7.minmax_tree_calc_distance(t,s.root,i)}return i}static sort(t){t.sort((t,e)=>f.Utils.LT(t[0],e[0])?-1:f.Utils.GT(t[0],e[0])?1:0)}static distance(t,e){return t.distanceTo(e)}}function t8(t){return new tQ(t.split(" ").map(Number))}function et(t){return t.split(", ").map(t8)}function ee(t){let e=et(t),n=[];for(let t=0;t<e.length-1;t++)n.push(new tz(e[t],e[t+1]));return new _(n)}function en(t){let e;let n=t.replace(/\(\(/,"").replace(/\)\)$/,"").split("), ("),i=new t2;return n.forEach((t,n)=>{let r=t.split(", ").map(t=>new tQ(t.split(" ").map(Number))),s=i.addFace(r);0===n?e=s.orientation():s.orientation()===e&&s.reverse()}),i}function ei(t){return t.split("\n")?.every(t=>t.includes("POINT"))}function er(t){return t.split("\n")?.every(t=>t.includes("LINESTRING"))}f.Distance=t7,f.isWktString=function(t){return t.startsWith("POINT")||ei(t)||t.startsWith("LINESTRING")||er(t)||t.startsWith("MULTILINESTRING")||t.startsWith("POLYGON")||t.startsWith("MULTIPOINT")||t.startsWith("MULTIPOLYGON")||t.startsWith("GEOMETRYCOLLECTION")},f.parseWKT=function t(e){if(e.startsWith("POINT"))return t8(e.replace(/^POINT \(/,"").replace(/\)$/,""));if(e.startsWith("MULTIPOINT"))return et(e.replace(/^MULTIPOINT \(/,"").replace(/\)$/,""));if(e.startsWith("LINESTRING"))return ee(e.replace(/^LINESTRING \(/,"").replace(/\)$/,""));if(e.startsWith("MULTILINESTRING"))return e.replace(/^MULTILINESTRING /,"").replace(/\(\(/,"").replace(/\)\)$/,"").split("), (").map(ee);if(e.startsWith("POLYGON")||e.startsWith("MULTIPOLYGON"))return e.startsWith("POLYGON")?en(e.replace(/^POLYGON /,"")):function(t){let e=t.split("?").map(en),n=new t2;return e.reduce((t,e)=>[...t,...e?.faces],[]).forEach(t=>n.addFace([...t?.shapes])),n}(e.replace(/^MULTIPOLYGON \(/,"").replace(/\)$/,"").replace(/\)\), \(\(/,"))?(("));if(e.startsWith("GEOMETRYCOLLECTION")){let n=e.match(/(POINT|LINESTRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION) \([^\)]+\)/g);return n[0].startsWith("GEOMETRYCOLLECTION")&&(n[0]=n[0].replace("GEOMETRYCOLLECTION (","")),n.map(t).map(t=>t instanceof Array?t:[t]).reduce((t,e)=>[...t,...e],[])}if(ei(e))return e.split("\n").map(t=>t.match(/\(([^)]+)\)/)[1]).map(t8);else if(er(e))return e.split("\n").map(t=>t.match(/\(([^)]+)\)/)[1]).map(ee).reduce((t,e)=>[...t,...e],[]);return[]},f.BooleanOperations=Z,f.Relations=tB;let{point:es,Polygon:eo}=f,{subtract:ea}=f.BooleanOperations,{point:el,Polygon:eh}=f,{unify:ec}=f.BooleanOperations})();
//# sourceMappingURL=index.js.map
